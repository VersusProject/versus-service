package gov.nist.itl.ssd.similarity.test.execution.function;

import edu.illinois.ncsa.versus.adapter.impl.ImageObjectAdapter;
import edu.illinois.ncsa.versus.descriptor.impl.GrayscaleHistogramDescriptor;
import edu.illinois.ncsa.versus.descriptor.impl.RGBHistogramDescriptor;
import edu.illinois.ncsa.versus.descriptor.impl.ThreeDimensionalDoubleArrayFeature;
import edu.illinois.ncsa.versus.extract.impl.ArrayFeatureExtractor;
import edu.illinois.ncsa.versus.extract.impl.GrayscaleHistogramExtractor;
import edu.illinois.ncsa.versus.extract.impl.RGBHistogramExtractor;
import edu.illinois.ncsa.versus.measure.Measure;
import edu.illinois.ncsa.versus.measure.Similarity;
import fj.data.Array;
import gov.nist.itl.ssd.similarity.test.TA;
import gov.nist.itl.ssd.similarity.test.VersusMeasureFx;
import gov.nist.itl.ssd.similarity.test.demo.scenario.altImpls.EuclideanL2MeasureAlt1;
import gov.nist.itl.ssd.similarity.test.demo.scenario.altImpls.EuclideanL2MeasureAlt2;
import gov.nist.itl.ssd.similarity.test.demo.scenario.altImpls.MathOpsEAlt;
import gov.nist.itl.ssd.similarity.test.utils.Utils;
import gov.nist.itl.versus.similarity.comparisons.ImageData;
import gov.nist.itl.versus.similarity.comparisons.adapter.impl.LabeledImageObjectAdapter;
import gov.nist.itl.versus.similarity.comparisons.descriptor.impl.LabeledThreeDimensionalDoubleArrayFeature;
import gov.nist.itl.versus.similarity.comparisons.extract.impl.LabeledArrayFeatureExtractor;
import gov.nist.itl.versus.similarity.comparisons.measure.LabeledMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.AdditiveSymmetricChiSquaredMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.AdjustedRandIndexMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.AvgDifferenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.BhattacharyyaMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.CanberraMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.ChebyshevLInfMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.CityBlockL1Measure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.ClarkMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.CosineMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.CzekanowskiDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.CzekanowskiMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.DiceDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.DiceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.DicePixelMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.DivergenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.EuclideanL2Measure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.FidelityMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.GowerMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.HarmonicMeanMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.HellingerMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.InnerProductMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.IntersectionDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.IntersectionMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JaccardDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JaccardMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JaccardPixelMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JeffreysMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JensenDifferenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.JensenShannonMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KDivergenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KulczynskiMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KulczynskiSMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KullbackLeiblerMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KumarHassebrookPCEMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.KumarJohnsonDifferenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.LorentzianMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.MatusitaDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.MatusitaMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.MinkowskiMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.MotykaDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.MotykaMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.NeymanChiSquaredMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.PearsonChiSquaredMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.ProbabilisticSymmetricChiSquaredMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.RandIndexMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.RuzickaMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SoergelMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SorensenMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SquaredChiSquaredMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SquaredChordDMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SquaredChordMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.SquaredEuclideanMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.TanejaDifferenceMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.TanimotoMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.TopsoeMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.TotalErrorRateEvaluationMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.TotalErrorRateTestMeasure;
import gov.nist.itl.versus.similarity.comparisons.measure.impl.WaveHedgesMeasure;

public class Functions<A> 
{
	
	public static TA<Measure> histogram_measures = new TA(Array.array(
			new EuclideanL2MeasureAlt1(),
			new EuclideanL2MeasureAlt2(),
			new AdditiveSymmetricChiSquaredMeasure(),
			new AvgDifferenceMeasure(),
			new BhattacharyyaMeasure(),
			new CanberraMeasure(),
			new ChebyshevLInfMeasure(),
			new CityBlockL1Measure(),
			new ClarkMeasure(),
			new CosineMeasure(),
			new CzekanowskiDMeasure(),
			new CzekanowskiMeasure(),
			new DiceDMeasure(),
			new DiceMeasure(),
			new DivergenceMeasure(),
			new EuclideanL2Measure(),
			new FidelityMeasure(),
			new GowerMeasure(),
			new HarmonicMeanMeasure(),
			new HellingerMeasure(),
			new InnerProductMeasure(),
			new IntersectionDMeasure(),
			new IntersectionMeasure(),
			new JaccardDMeasure(),
			new JaccardMeasure(),
			new JeffreysMeasure(),
			new JensenDifferenceMeasure(),
			new JensenShannonMeasure(),
			new KDivergenceMeasure(),
			new KulczynskiMeasure(),
			new KulczynskiSMeasure(),
			new KullbackLeiblerMeasure(),
			new KumarHassebrookPCEMeasure(),
			new KumarJohnsonDifferenceMeasure(),
			new LorentzianMeasure(),
			new MatusitaDMeasure(),
			new MatusitaMeasure(),
			new MinkowskiMeasure(),
			new MotykaDMeasure(),
			new MotykaMeasure(),
			new NeymanChiSquaredMeasure(),
			new PearsonChiSquaredMeasure(),
			new ProbabilisticSymmetricChiSquaredMeasure(),
			new RuzickaMeasure(),
			new SoergelMeasure(),
			new SorensenMeasure(),
			new SquaredChiSquaredMeasure(),
			new SquaredChordDMeasure(),
			new SquaredChordMeasure(),
			new SquaredEuclideanMeasure(),
			new TanejaDifferenceMeasure(),
			new TanimotoMeasure(),
			new TopsoeMeasure(),
			new WaveHedgesMeasure()			
			));
	
	public static TA<LabeledMeasure> pixel_measures = new TA(Array.array(
			new AdjustedRandIndexMeasure(),
			new DicePixelMeasure(),
			new JaccardPixelMeasure(),
			new RandIndexMeasure(),
			new TotalErrorRateEvaluationMeasure(),
			new TotalErrorRateTestMeasure()
			));
	
	
	protected  TA<Function> FUNCTIONS;
	
	public TA<Measure> histogram_measures(){return histogram_measures;}
	public TA<LabeledMeasure> pixel_measures(){return pixel_measures;}
	
	public Functions()
	{
		super();	
		FUNCTIONS = new TA();		
		load(); 
	}

	
	public void load()
	{

		entry("gaussSum_DD", new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
			public Double evalAt( Double a ) {
				try {
					return m().gaussSum(a);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		

				public void initFunction()
				{
					addMeasureCategories( Array.array("NA") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );
				}
		});
			entry("ln_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
				public Double evalAt( Double a ) {
					try {
						return m().ln(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.1d, -2.3025850929940455d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.2d, -1.6094379124341003d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, -1.203972804325936d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.4d, -0.916290731874155d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.5d, -0.6931471805599453d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.6d, -0.5108256237659907d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.7d, -0.35667494393873245d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, -0.22314355131420985d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, -0.1053605156578264d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 0.0d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 0.6931471805599453d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 1.0986122886681098d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 1.3862943611198906d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 1.6094379124341003d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 1.791759469228055d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 1.9459101490553132d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 2.0794415416798357d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 2.1972245773362196d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 2.302585092994046d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 2.995732273553991d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 3.4011973816621555d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 3.6888794541139363d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 3.912023005428146d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 4.0943445622221d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 4.248495242049359d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 4.382026634673881d)); // ln
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 4.499809670330265d)); // ln
				   }
			});
			
			entry("abs_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
				public Double evalAt( Double a ) {
					try {
						return m().abs(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
		
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.1d, 0.1d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.2d, 0.2d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, 0.30000000000000004d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.4d, 0.4d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.5d, 0.5d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.6d, 0.6d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.7d, 0.7d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, 0.7999999999999999d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, 0.8999999999999999d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 1.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 2.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 3.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 4.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 5.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 6.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 7.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 8.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 9.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 10.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 20.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 30.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 40.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 50.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 60.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 70.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 80.0d)); // abs
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 90.0d)); // abs					
				}
			});		
		
			entry("reciprocal1_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
				public Double evalAt( Double a ) {
					try {
						return m().reciprocal1(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}	
				
				public void initFunction()
				{
					addUnitTest(new Arity2Input<Double,Double>(0.1d, 10.0d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.2d, 5.0d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, 3.333333333333333d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.4d, 2.5d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.5d, 2.0d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.6d, 1.6666666666666667d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.7d, 1.4285714285714286d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, 1.25d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, 1.1111111111111112d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 1.0d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 0.5d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 0.3333333333333333d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 0.25d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 0.2d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 0.16666666666666666d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 0.14285714285714285d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 0.125d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 0.1111111111111111d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 0.1d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 0.05d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 0.03333333333333333d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 0.025d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 0.02d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 0.016666666666666666d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 0.014285714285714285d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 0.0125d)); // reciprocal
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 0.011111111111111112d)); // reciprocal	
					
					addFailureModeTest(new Arity2Input<Double,Double>(0.0d, null)); // reciprocal
					
				}
			});		
			entry("sqrt_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
				public Double evalAt( Double a ) {
					try {
						return m().sqrt(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{		
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.1d, 0.31622776601683794d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.2d, 0.4472135954999579d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, 0.5477225575051662d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.4d, 0.6324555320336759d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.5d, 0.7071067811865476d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.6d, 0.7745966692414834d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.7d, 0.8366600265340756d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, 0.8944271909999159d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, 0.9486832980505138d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 1.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 1.4142135623730951d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 1.7320508075688772d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 2.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 2.23606797749979d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 2.449489742783178d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 2.6457513110645907d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 2.8284271247461903d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 3.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 3.1622776601683795d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 4.47213595499958d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 5.477225575051661d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 6.324555320336759d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 7.0710678118654755d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 7.745966692414834d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 8.366600265340756d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 8.94427190999916d)); // sqrt
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 9.486832980505138d)); // sqrt					
				}
			});		
			entry("root_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
				public Double evalAt( Double a ) {
					try {
						return m().root(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				public void initFunction()
				{
					addUnitTest(new Arity2Input<Double,Double>(0.1d, 1.0000000000000006E-10d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.2d, 3.200000000000001E-4d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, 0.018074689652218593d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.4d, 0.10119288512538815d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.5d, 0.25d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.6d, 0.4268271965388075d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.7d, 0.6007744931773393d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, 0.7565932872025406d)); // root
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, 0.8895253798041733d)); // root
					
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 1.0d)); // root
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 1.4142135623730951d)); // root
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 1.4422495703074083d)); // root
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 1.414213562373095d)); // root
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 1.379729661461215d)); // root
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 1.3480061545972777d)); // root
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 1.3204692477561237d)); // root
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 1.2968395546510096d)); // root
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 1.2765180070092417d)); // root
					
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 1.2589254117941673d)); // root
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 1.1615863496415422d)); // root
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 1.1200499091501965d)); // root
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 1.0966082271243613d)); // root
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 1.0813826568002933d)); // root
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 1.0706212377669662d)); // root
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 1.0625724302840924d)); // root
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 1.056303271457477d)); // root
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 1.0512688731774795d)); // root
					
					addFailureModeTest(new Arity2Input<Double,Double>(0.0d, null)); // root
				}
			});			
			entry("square_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") 
			{			
				public Double evalAt( Double a ) {
					try {
						return m().square(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				public void initFunction()
				{			
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.1d, 0.010000000000000002d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.2d, 0.04000000000000001d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, 0.09000000000000002d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.4d, 0.16000000000000003d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.5d, 0.25d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.6d, 0.36d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.7d, 0.48999999999999994d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, 0.6399999999999999d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, 0.8099999999999998d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(1.0d, 1.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(2.0d, 4.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(3.0d, 9.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(4.0d, 16.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(5.0d, 25.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(6.0d, 36.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(7.0d, 49.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(8.0d, 64.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(9.0d, 81.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(0.0d, 0.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(10.0d, 100.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(20.0d, 400.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(30.0d, 900.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(40.0d, 1600.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(50.0d, 2500.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(60.0d, 3600.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(70.0d, 4900.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(80.0d, 6400.0d)); // square
					addUnitTest(new Arity2Input<Double,Double>(90.0d, 8100.0d)); // square					
				}
			});		

	
				entry("ln_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
					public Double evalAt( Double a ) {
						try {
							return m().ln(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					
					public void initFunction()
					{

						addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.1d, -2.3025850929940455d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.2d, -1.6094379124341003d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.30000000000000004d, -1.203972804325936d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.4d, -0.916290731874155d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.5d, -0.6931471805599453d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.6d, -0.5108256237659907d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.7d, -0.35667494393873245d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.7999999999999999d, -0.22314355131420985d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.8999999999999999d, -0.1053605156578264d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(1.0d, 0.0d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(2.0d, 0.6931471805599453d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(3.0d, 1.0986122886681098d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(4.0d, 1.3862943611198906d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(5.0d, 1.6094379124341003d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(6.0d, 1.791759469228055d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(7.0d, 1.9459101490553132d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(8.0d, 2.0794415416798357d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(9.0d, 2.1972245773362196d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(0.0d, -744.4400719213812d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(10.0d, 2.302585092994046d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(20.0d, 2.995732273553991d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(30.0d, 3.4011973816621555d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(40.0d, 3.6888794541139363d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(50.0d, 3.912023005428146d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(60.0d, 4.0943445622221d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(70.0d, 4.248495242049359d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(80.0d, 4.382026634673881d)); // ln
						addUnitTest(new Arity2Input<Double,Double>(90.0d, 4.499809670330265d)); // ln
					   }
				});			

				entry("not_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
					public Double evalAt( Double a ) {
						try {
							return m().not(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					
					public void initFunction()
					{

						addMeasureCategories( Array.array("NA") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );
					}
				});	
				
				entry("logical_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
					public Double evalAt( Double a ) {
						try {
							return m().logical(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					
					public void initFunction()
					{
						addMeasureCategories( Array.array("NA") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );
					}
				});	
				
				entry("nChoose2_DD",  new Arity1Function<Double,Double>("Arity1Function<Double,Double>") {			
					public Double evalAt( Double a ) {
						try {
							return m().nChoose2(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					
					public void initFunction()
					{
						addMeasureCategories( Array.array("NA") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );
					}
				});
				
				entry("mkConstArray_IDD1",  new Arity2Function<Integer,Double,Double[]>("Arity2Function<Integer,Double,Double[]>") {			
					public Double[] evalAt( Integer a, Double b ) {
						try {
							return m().mkConstArray(a,b);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					
					public void initFunction()
					{
						addMeasureCategories( Array.array("NA") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );
					}
				});

				entry("gaussSum_D1D",  new Arity1Function<Double[],Double>("Arity1Function<Double[],Double>") {			
					public Double evalAt( Double[] a ) {
						try {
							return m().gaussSum(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}
					
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );			
					 }
				});			
				entry("mult_D1D",  new Arity1Function<Double[],Double>("Arity1Function<Double[],Double>") {			
					public Double evalAt( Double[] a ) {
						try {
							return m().mult(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );			
					 }
				});	
				
				entry("max_D1D",  new Arity1Function<Double[],Double>("Arity1Function<Double[],Double>") {			
					public Double evalAt( Double[] a ) {
						try {
							return m().max(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}	
					
					public void initFunction(){
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );							
					 }
				});
				
				entry("min_D1D",  new Arity1Function<Double[],Double>("Arity1Function<Double[],Double>") {			
					public Double evalAt( Double[] a ) {
						try {
							return m().min(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );			
					 }
				});

				entry("uniqueValues_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
					public Double[] evalAt( Double[] a ) {
						try {
							return m().uniqueValues(a);
						}
						catch( Exception e ) { handleException(e); }
						return null;
					}		
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );			
					 }
				});
	
				
			entry("ln_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) 
				{
					try {
						return m().ln(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}	
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );			
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{-744.4400719213812d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.1d}, new Double[]{-2.3025850929940455d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.2d}, new Double[]{-1.6094379124341003d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.30000000000000004d}, new Double[]{-1.203972804325936d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.4d}, new Double[]{-0.916290731874155d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.5d}, new Double[]{-0.6931471805599453d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.6d}, new Double[]{-0.5108256237659907d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.7d}, new Double[]{-0.35667494393873245d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.7999999999999999d}, new Double[]{-0.22314355131420985d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.8999999999999999d}, new Double[]{-0.1053605156578264d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{-744.4400719213812d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{1.0d}, new Double[]{0.0d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{2.0d}, new Double[]{0.6931471805599453d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{3.0d}, new Double[]{1.0986122886681098d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{4.0d}, new Double[]{1.3862943611198906d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{5.0d}, new Double[]{1.6094379124341003d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{6.0d}, new Double[]{1.791759469228055d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{7.0d}, new Double[]{1.9459101490553132d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{8.0d}, new Double[]{2.0794415416798357d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{9.0d}, new Double[]{2.1972245773362196d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{-744.4400719213812d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{10.0d}, new Double[]{2.302585092994046d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{20.0d}, new Double[]{2.995732273553991d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{30.0d}, new Double[]{3.4011973816621555d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{40.0d}, new Double[]{3.6888794541139363d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{50.0d}, new Double[]{3.912023005428146d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{60.0d}, new Double[]{4.0943445622221d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{70.0d}, new Double[]{4.248495242049359d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{80.0d}, new Double[]{4.382026634673881d})); // ln_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{90.0d}, new Double[]{4.499809670330265d})); // ln_D1
				}
			});
			
			entry("abs_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().abs(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}
				
				public void initFunction()
				{
	
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{0.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.1d}, new Double[]{0.1d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.2d}, new Double[]{0.2d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.30000000000000004d}, new Double[]{0.30000000000000004d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.4d}, new Double[]{0.4d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.5d}, new Double[]{0.5d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.6d}, new Double[]{0.6d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.7d}, new Double[]{0.7d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.7999999999999999d}, new Double[]{0.7999999999999999d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.8999999999999999d}, new Double[]{0.8999999999999999d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{0.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{1.0d}, new Double[]{1.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{2.0d}, new Double[]{2.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{3.0d}, new Double[]{3.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{4.0d}, new Double[]{4.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{5.0d}, new Double[]{5.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{6.0d}, new Double[]{6.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{7.0d}, new Double[]{7.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{8.0d}, new Double[]{8.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{9.0d}, new Double[]{9.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{0.0d}, new Double[]{0.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{10.0d}, new Double[]{10.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{20.0d}, new Double[]{20.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{30.0d}, new Double[]{30.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{40.0d}, new Double[]{40.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{50.0d}, new Double[]{50.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{60.0d}, new Double[]{60.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{70.0d}, new Double[]{70.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{80.0d}, new Double[]{80.0d})); // abs_D1
					addUnitTest(new Arity2Input<Double[],Double[]>(new Double[]{90.0d}, new Double[]{90.0d})); // abs_D1
				}
			});		
			entry("reciprocal_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().reciprocal1(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}	
				
				public void initFunction(){

					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});		
			entry("sqrt_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().sqrt(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});
			entry("root_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().root(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});			
			entry("square_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().square(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});
			
			entry("normalizeHistogram_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().normalizeHistogram(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});
			
			entry("not_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().not(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});
			
			entry("logical_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().logical(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});
			
			entry("uniqueSort_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().uniqueSort(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});		
			
			entry("uniquePixelValues_D1D1",  new Arity1Function<Double[],Double[]>("Arity1Function<Double[],Double[]>") {			
				public Double[] evalAt( Double[] a ) {
					try {
						return m().uniquePixelValues(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});			
			
			entry("sum_D1D", new Arity1Function<Double[],Double>("Arity1Function<Double[],Double>") {			
				public Double evalAt( Double[] a ) {
					try {
						return m().sum(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );					
				}
			});		
		
		entry("add_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().add(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{	
					
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.0d, 0.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.1d, 0.1d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.2d, 0.2d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.30000000000000004d, 0.30000000000000004d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.4d, 0.4d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.5d, 0.6d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.6d, 0.7d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7d, 0.7999999999999999d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7999999999999999d, 0.8999999999999999d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.8999999999999999d, 0.9999999999999999d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,0.9999999999999999d, 1.2d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.0999999999999999d, 1.2999999999999998d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.2d, 1.4d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.3d, 1.5d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.4000000000000001d, 1.6d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.5000000000000002d, 1.8000000000000003d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.6000000000000003d, 1.9000000000000004d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.7000000000000004d, 2.0000000000000004d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.8000000000000005d, 2.1000000000000005d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.9000000000000006d, 2.2000000000000006d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.0000000000000004d, 2.4000000000000004d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.1000000000000005d, 2.5000000000000004d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.2000000000000006d, 2.6000000000000005d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.3000000000000007d, 2.7000000000000006d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.400000000000001d, 2.8000000000000007d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 1.0d, 1.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 2.0d, 2.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 3.0d, 3.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 4.0d, 4.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 5.0d, 6.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 6.0d, 7.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 7.0d, 8.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 8.0d, 9.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 9.0d, 10.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 10.0d, 12.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 11.0d, 13.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 12.0d, 14.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 13.0d, 15.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 14.0d, 16.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 15.0d, 18.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 16.0d, 19.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 17.0d, 20.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 18.0d, 21.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 19.0d, 22.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 20.0d, 24.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 21.0d, 25.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 22.0d, 26.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 23.0d, 27.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 24.0d, 28.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 10.0d, 10.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 20.0d, 20.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 30.0d, 30.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 40.0d, 40.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 50.0d, 60.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 60.0d, 70.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 70.0d, 80.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 80.0d, 90.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 90.0d, 100.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 100.0d, 120.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 110.0d, 130.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 120.0d, 140.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 130.0d, 150.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 140.0d, 160.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 150.0d, 180.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 160.0d, 190.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 170.0d, 200.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 180.0d, 210.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 190.0d, 220.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 200.0d, 240.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 210.0d, 250.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 220.0d, 260.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 230.0d, 270.0d)); // add_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 240.0d, 280.0d)); // add_DD
					
				}
		});
		entry("sub_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().sub(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}	
			
				public void initFunction()
				{

					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.0d, 0.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.1d, -0.1d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.2d, -0.2d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.30000000000000004d, -0.30000000000000004d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.4d, -0.4d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.5d, -0.4d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.6d, -0.5d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7d, -0.6d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7999999999999999d, -0.7d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.8999999999999999d, -0.7999999999999999d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,0.9999999999999999d, -0.7999999999999998d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.0999999999999999d, -0.8999999999999999d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.2d, -1.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.3d, -1.1d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.4000000000000001d, -1.2000000000000002d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.5000000000000002d, -1.2000000000000002d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.6000000000000003d, -1.3000000000000003d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.7000000000000004d, -1.4000000000000004d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.8000000000000005d, -1.5000000000000004d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.9000000000000006d, -1.6000000000000005d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.0000000000000004d, -1.6000000000000005d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.1000000000000005d, -1.7000000000000006d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.2000000000000006d, -1.8000000000000007d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.3000000000000007d, -1.9000000000000008d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.400000000000001d, -2.000000000000001d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 1.0d, -1.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 2.0d, -2.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 3.0d, -3.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 4.0d, -4.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 5.0d, -4.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 6.0d, -5.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 7.0d, -6.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 8.0d, -7.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 9.0d, -8.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 10.0d, -8.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 11.0d, -9.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 12.0d, -10.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 13.0d, -11.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 14.0d, -12.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 15.0d, -12.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 16.0d, -13.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 17.0d, -14.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 18.0d, -15.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 19.0d, -16.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 20.0d, -16.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 21.0d, -17.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 22.0d, -18.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 23.0d, -19.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 24.0d, -20.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 10.0d, -10.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 20.0d, -20.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 30.0d, -30.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 40.0d, -40.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 50.0d, -40.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 60.0d, -50.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 70.0d, -60.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 80.0d, -70.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 90.0d, -80.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 100.0d, -80.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 110.0d, -90.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 120.0d, -100.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 130.0d, -110.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 140.0d, -120.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 150.0d, -120.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 160.0d, -130.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 170.0d, -140.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 180.0d, -150.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 190.0d, -160.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 200.0d, -160.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 210.0d, -170.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 220.0d, -180.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 230.0d, -190.0d)); // sub_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 240.0d, -200.0d)); // sub_DD
				}
		});	
		entry("mult_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().mult(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
			public void initFunction()
			{

					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.1d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.2d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.30000000000000004d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.4d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.5d, 0.05d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.6d, 0.06d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7d, 0.06999999999999999d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7999999999999999d, 0.08d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.8999999999999999d, 0.09d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,0.9999999999999999d, 0.19999999999999998d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.0999999999999999d, 0.21999999999999997d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.2d, 0.24d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.3d, 0.26d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.4000000000000001d, 0.28d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.5000000000000002d, 0.4500000000000001d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.6000000000000003d, 0.48000000000000015d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.7000000000000004d, 0.5100000000000002d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.8000000000000005d, 0.5400000000000003d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.9000000000000006d, 0.5700000000000003d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.0000000000000004d, 0.8000000000000003d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.1000000000000005d, 0.8400000000000003d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.2000000000000006d, 0.8800000000000003d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.3000000000000007d, 0.9200000000000004d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.400000000000001d, 0.9600000000000004d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 1.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 2.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 3.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 4.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 5.0d, 5.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 6.0d, 6.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 7.0d, 7.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 8.0d, 8.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 9.0d, 9.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 10.0d, 20.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 11.0d, 22.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 12.0d, 24.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 13.0d, 26.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 14.0d, 28.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 15.0d, 45.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 16.0d, 48.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 17.0d, 51.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 18.0d, 54.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 19.0d, 57.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 20.0d, 80.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 21.0d, 84.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 22.0d, 88.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 23.0d, 92.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 24.0d, 96.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 0.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 10.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 20.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 30.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 40.0d, 0.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 50.0d, 500.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 60.0d, 600.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 70.0d, 700.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 80.0d, 800.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 90.0d, 900.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 100.0d, 2000.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 110.0d, 2200.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 120.0d, 2400.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 130.0d, 2600.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 140.0d, 2800.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 150.0d, 4500.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 160.0d, 4800.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 170.0d, 5100.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 180.0d, 5400.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 190.0d, 5700.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 200.0d, 8000.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 210.0d, 8400.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 220.0d, 8800.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 230.0d, 9200.0d)); // mult_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 240.0d, 9600.0d)); // mult_DD
				}
		});	
		entry("div_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().div(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.1d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.2d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.30000000000000004d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d,0.4d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.5d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.6d, 0.16666666666666669d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7d, 0.14285714285714288d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.7999999999999999d, 0.12500000000000003d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.1d,0.8999999999999999d, 0.11111111111111113d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,0.9999999999999999d, 0.20000000000000004d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.0999999999999999d, 0.18181818181818185d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.2d, 0.16666666666666669d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.3d, 0.15384615384615385d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.2d,1.4000000000000001d, 0.14285714285714285d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.5000000000000002d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.6000000000000003d, 0.1875d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.7000000000000004d, 0.1764705882352941d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.8000000000000005d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.30000000000000004d,1.9000000000000006d, 0.15789473684210523d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.0000000000000004d, 0.19999999999999996d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.1000000000000005d, 0.19047619047619044d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.2000000000000006d, 0.18181818181818177d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.3000000000000007d, 0.17391304347826084d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.4d,2.400000000000001d, 0.16666666666666663d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 1.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 2.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 3.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 4.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 5.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 6.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 7.0d, 0.14285714285714285d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 8.0d, 0.125d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(1.0d, 9.0d, 0.1111111111111111d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 10.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 11.0d, 0.18181818181818182d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 12.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 13.0d, 0.15384615384615385d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(2.0d, 14.0d, 0.14285714285714285d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 15.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 16.0d, 0.1875d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 17.0d, 0.17647058823529413d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 18.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(3.0d, 19.0d, 0.15789473684210525d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 20.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 21.0d, 0.19047619047619047d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 22.0d, 0.18181818181818182d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 23.0d, 0.17391304347826086d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(4.0d, 24.0d, 0.16666666666666666d)); // div_DD
					
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 10.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 20.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 30.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(0.0d, 40.0d, 0.0d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 50.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 60.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 70.0d, 0.14285714285714285d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 80.0d, 0.125d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(10.0d, 90.0d, 0.1111111111111111d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 100.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 110.0d, 0.18181818181818182d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 120.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 130.0d, 0.15384615384615385d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(20.0d, 140.0d, 0.14285714285714285d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 150.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 160.0d, 0.1875d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 170.0d, 0.17647058823529413d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 180.0d, 0.16666666666666666d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(30.0d, 190.0d, 0.15789473684210525d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 200.0d, 0.2d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 210.0d, 0.19047619047619047d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 220.0d, 0.18181818181818182d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 230.0d, 0.17391304347826086d)); // div_DD
					addUnitTest(new Arity3Input<Double,Double,Double>(40.0d, 240.0d, 0.16666666666666666d)); // div_DD
				}
		});	
		entry("pow_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().pow(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("max_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().max(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{

					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			
		
		entry("min_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().min(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("and_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().and(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});		
		
		entry("or_DDD", new Arity2Function<Double,Double,Double>("Arity2Function<Double,Double,Double>") {			
			public Double evalAt( Double a, Double b ) {
				try {
					return m().or(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("grayScaleHistogram2Double_GD1", new Arity1Function<GrayscaleHistogramDescriptor,Double[]>("Arity1Function<GrayscaleHistogramDescriptor,Double[]>") {			
			public Double[] evalAt( GrayscaleHistogramDescriptor a ) {
				try {
					return m().grayScaleHistogram2Double(a);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	

		entry("normalizeGrayscaleHistogram_GD1", new Arity1Function<GrayscaleHistogramDescriptor,Double[]>("Arity1Function<GrayscaleHistogramDescriptor,Double[]>") {			
			public Double[] evalAt( GrayscaleHistogramDescriptor a ) {
				try {
					return m().normalizeGrayscaleHistogram(a);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("gaussSum_I1I", new Arity1Function<Integer[],Integer>("Arity1Function<Integer[],Integer>") {			
			public Integer evalAt( Integer[] a) {
				try {
					return m().gaussSum(a);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	

		
		entry("mult_DD1D1", new Arity2Function<Double,Double[],Double[]>("Arity2Function<Double,Double[],Double[]>") {			
			public Double[] evalAt( Double a, Double[] b ) {
				try {
					return m().mult(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		
		entry("dotProd_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().dotProd(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("add_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().add(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );		
				}
		});	
		entry("sub_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().sub(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});		
		
		entry("div_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().div(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	

				}
		});		
		entry("mult_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().mult(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			
		entry("pow_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().pow(a, b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			
		
		entry("min_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().min(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
	
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});				
		entry("max_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().max(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});				
		entry("and_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().and(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});				
		entry("or_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().or(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}	
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});				
		entry("mask_D1D1D1", new Arity2Function<Double[],Double[],Double[]>("Arity2Function<Double[],Double[],Double[]>") {			
			public Double[] evalAt( Double[] a, Double[] b ) {
				try {
					return m().min(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			
		
		entry("sub_D1D1D1", new Arity2Function<Double[],Double,Double[]>("Arity2Function<Double[],Double,Double[]>") {			
			public Double[] evalAt( Double[] a, Double b ) {
				try {
					return m().sub(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			

		entry("pvrel_greaterThan_D1DD1", new Arity2Function<Double[],Double,Double[]>("Arity2Function<Double[],Double,Double[]>") {			
			public Double[] evalAt( Double[] a, Double b ) {
				try {
					return m().pvrel_greaterThan(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
		entry("pvrel_equalTo_D1DD1", new Arity2Function<Double[],Double,Double[]>("Arity2Function<Double[],Double,Double[]>") {			
			public Double[] evalAt( Double[] a, Double b ) {
				try {
					return m().pvrel_equalTo(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});		
		
		entry("getMatches_D1DD1", new Arity2Function<Double[],Double,Double[]>("Arity2Function<Double[],Double,Double[]>") {			
			public Double[] evalAt( Double[] a, Double b ) {
				try {
					return m().getMatches(a,b);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}	
			
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});		
		
		entry("array2Img_D1IIIM", new Arity4Function<Double[],Integer,Integer,Integer,ImageData>("Arity4Function<Double[],Integer,Integer,Integer,ImageData>") {			
			public ImageData evalAt( Double[] a, Integer b, Integer c, Integer d ) {
				try {
					return m().array2Img(a,b,c,d);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});			
		
		entry("sum_D2D", new Arity1Function<Double[][],Double>("Arity1Function<Double[][],Double>") {			
			public Double evalAt( Double[][] a ) {
				try {
					return m().sum(a);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
				}
		});	
		
			entry("getRowCounts_D2D1", new Arity1Function<Double[][],Double[]>("Arity1Function<Double[][],Double[]>") {			
				public Double[] evalAt( Double[][] a ) {
					try {
						return m().getRowCounts(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});		
			entry("getColCounts_D2D1", new Arity1Function<Double[][],Double[]>("Arity1Function<Double[][],Double[]>") {			
				public Double[] evalAt( Double[][] a ) {
					try {
						return m().getColCounts(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});				
	
			entry("not_D2D2", new Arity1Function<Double[][],Double[][]>("Arity1Function<Double[][],Double[][]>") {			
				public Double[][] evalAt( Double[][] a ) {
					try {
						return m().not(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});	
			
			entry("logical_D2D2", new Arity1Function<Double[][],Double[][]>("Arity1Function<Double[][],Double[][]>") {			
				public Double[][] evalAt( Double[][] a ) {
					try {
						return m().logical(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
				
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});				

			entry("vectorize_D2D2", new Arity1Function<Double[][],Double[]>("Arity1Function<Double[][],Double[]>") {			
				public Double[] evalAt( Double[][] a ) {
					try {
						return m().vectorize(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		
					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});	
			
			entry("and_D2D2D2", new Arity2Function<Double[][],Double[][],Double[][]>("Arity2Function<Double[][],Double[][],Double[][]>") {			
				public Double[][] evalAt( Double[][] a, Double[][] b ) {
					try {
						return m().and(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
		
					}
			});	
			
			entry("or_D2D2D2", new Arity2Function<Double[][],Double[][],Double[][]>("Arity2Function<Double[][],Double[][],Double[][]>") {			
				public Double[][] evalAt( Double[][] a, Double[][] b ) {
					try {
						return m().or(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );		
					}
			});	
			
			entry("getRow_D2ID1", new Arity2Function<Double[][],Integer,Double[]>("Arity2Function<Double[][],Integer,Double[]>") {			
				public Double[] evalAt( Double[][] a, Integer b) {
					try {
						return m().getRow(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});		
			
			entry("getCol_D2ID1", new Arity2Function<Double[][],Integer,Double[]>("Arity2Function<Double[][],Integer,Double[]>") {			
				public Double[] evalAt( Double[][] a, Integer b) {
					try {
						return m().getCol(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});				
		
			entry("getColumn_D2IID1", new Arity3Function<Double[][],Integer,Integer,Double[]>("Arity3Function<Double[][],Integer,Integer,Double[]>") {			
				public Double[] evalAt( Double[][] a, Integer b, Integer c) {
					try {
						return m().getColumn(a,b,c);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );		
					}
			});		

			entry("getRow_D2IID1", new Arity3Function<Double[][],Integer,Integer,Double[]>("Arity3Function<Double[][],Integer,Integer,Double[]>") {			
				public Double[] evalAt( Double[][] a, Integer b, Integer c) {
					try {
						return m().getRow(a,b,c);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );		
					}
			});	
			
			entry("sum_D3D", new Arity1Function<Double[][][],Double>("Arity1Function<Double[][][],Double>") {			
				public Double evalAt( Double[][][] a) {
					try {
						return m().sum(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});
			
			entry("not_D3D3", new Arity1Function<Double[][][],Double[][][]>("Arity1Function<Double[][][],Double[][][]>") {			
				public Double[][][] evalAt( Double[][][] a) {
					try {
						return m().not(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	

					}
			});
			
			entry("logical_D3D3", new Arity1Function<Double[][][],Double[][][]>("Arity1Function<Double[][][],Double[][][]>") {			
				public Double[][][] evalAt( Double[][][] a) {
					try {
						return m().logical(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	

					}
			});
			
			entry("vectorize_D3D1", new Arity1Function<Double[][][],Double[]>("Arity1Function<Double[][][],Double[]>") {			
				public Double[] evalAt( Double[][][] a) {
					try {
						return m().vectorize(a);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{

						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
					}
			});
			

			entry("and_D3D3D3", new Arity2Function<Double[][][],Double[][][],Double[][][]>("Arity2Function<Double[][][],Double[][][],Double[][][]>") {			
				public Double[][][] evalAt( Double[][][] a, Double[][][] b) {
					try {
						return m().and(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{

						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	

					}
			});
			
			entry("or_D3D3D3", new Arity2Function<Double[][][],Double[][][],Double[][][]>("Arity2Function<Double[][][],Double[][][],Double[][][]>") {			
				public Double[][][] evalAt( Double[][][] a, Double[][][] b) {
					try {
						return m().or(a,b);
					}
					catch( Exception e ) { handleException(e); }
					return null;
				}		

					public void initFunction()
					{
						addMeasureCategories( Array.array("XX") );	
						addMeasureOpEquivalents( Array.array("XX"));
						addDependentOps( Array.array("XX") );
						addProperties( Array.array("XX"));
						addFaultCategories( Array.array("XX") );	
	
					}
			});
			
		entry("histogram_measure_additive_symmetric_chiSquared", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_additive_symmetric_chiSquared(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
		
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.9200000000000002d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 2.9166666666666665d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 4.114285714285715d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 5.512499999999998d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 7.111111111111109d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 3.839999999999998d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 4.786363636363635d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 5.833333333333333d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 6.980769230769232d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 8.22857142857143d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 5.760000000000001d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 6.689583333333335d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 7.6862745098039245d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 8.750000000000004d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 9.88070175438597d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 7.680000000000004d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 8.60119047619048d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 9.57272727272728d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 10.594565217391311d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 11.666666666666675d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 19.2d)); // histogram_measure_additive_symmetric_chiSquared				
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 29.166666666666668d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 41.142857142857146d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 55.125d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 71.11111111111111d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 38.4d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 47.86363636363637d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 58.333333333333336d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 69.8076923076923d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 82.28571428571429d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 57.6d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 66.89583333333333d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 76.86274509803921d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 87.5d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 98.80701754385964d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 76.8d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 86.01190476190476d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 95.72727272727273d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 105.94565217391305d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 116.66666666666667d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 192.0d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 291.6666666666667d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 411.42857142857144d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 551.25d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 711.1111111111111d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 384.0d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 478.6363636363636d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 583.3333333333334d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 698.0769230769231d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 822.8571428571429d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 576.0d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 668.9583333333334d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 768.6274509803922d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 875.0d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 988.0701754385965d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 768.0d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 860.1190476190476d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 957.2727272727273d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 1059.4565217391305d)); // histogram_measure_additive_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 1166.6666666666667d)); // histogram_measure_additive_symmetric_chiSquared
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_additive_symmetric_chiSquared					

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_additive_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_additive_symmetric_chiSquared
					
				}
		});	
		entry("histogram_measure_avg_difference", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_avg_difference(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction(){	
					addMeasureOpEquivalents( Array.array("XX"));	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.05d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.1d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.15000000000000002d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.2d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.2d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.25d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.3d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.35d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.39999999999999997d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.3999999999999999d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.44999999999999996d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.55d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.6000000000000001d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6000000000000001d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6500000000000001d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7000000000000002d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7500000000000002d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8000000000000003d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8000000000000003d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8500000000000003d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.9000000000000004d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.9500000000000004d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.0000000000000004d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 2.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 3.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 3.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 4.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 4.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 4.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 5.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 5.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 6.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 6.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 6.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 7.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 7.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 8.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 8.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 8.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 9.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 9.5d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 10.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 5.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 10.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 15.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 20.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 20.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 25.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 30.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 35.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 40.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 40.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 45.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 50.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 55.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 60.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 60.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 65.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 70.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 75.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 80.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 80.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 85.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 90.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 95.0d)); // histogram_measure_avg_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 100.0d)); // histogram_measure_avg_difference
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 8.988465674311579E307d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 8.988465674311579E307d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 8.988465674311579E307d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 8.988465674311579E307d)); // histogram_measure_avg_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_avg_difference
					
				}
		});
		entry("histogram_measure_bhattacharyya", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_bhattacharyya(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.4978661367769954d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 1.4067053583800182d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.3296300184663892d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.2628643221541278d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.2039728043259361d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.8047189562170503d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.7570638663148879d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7135581778200729d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.6735368239833046d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.6364828379064437d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.39925384810888565d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.36698458754010005d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.33667227663188254d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.3080930697119083d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.2810594590767704d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.11157177565710466d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.08717669357238865d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.06391668575494229d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.04169080446952527d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.02041099726012738d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, -0.8047189562170503d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, -0.8958797346140274d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, -0.9729550745276567d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, -1.039720770839918d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, -1.0986122886681098d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, -1.4978661367769956d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, -1.545521226679158d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, -1.5890269151739727d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, -1.6290482690107408d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, -1.666102255087602d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, -1.90333124488516d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, -1.9356005054539454d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, -1.9659128163621629d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, -1.9944920232821373d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, -2.021525633917275d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, -2.191013317336941d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, -2.2154083994216567d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, -2.2386684072391034d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, -2.2608942885245202d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, -2.282174095733918d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, -3.1073040492110957d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, -3.198464827608073d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, -3.275540167521702d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, -3.3423058638339636d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, -3.4011973816621555d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, -3.800451229771041d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, -3.8481063196732035d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, -3.8916120081680186d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, -3.9316333620047867d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, -3.9686873480816476d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, -4.205916337879206d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, -4.238185598447991d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, -4.268497909356208d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, -4.297077116276183d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, -4.324110726911321d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, -4.4935984103309865d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, -4.517993492415703d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, -4.541253500233149d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, -4.563479381518566d)); // histogram_measure_bhattacharyya
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, -4.584759188727964d)); // histogram_measure_bhattacharyya
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 17.328679513998633d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 17.328679513998633d)); // histogram_measure_bhattacharyya
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 744.4400719213812d)); // histogram_measure_bhattacharyya
					
					
				}
		});
		entry("histogram_measure_canberra", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_canberra(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6666666666666667d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.75d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7777777777777778d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6666666666666665d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6923076923076923d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.7333333333333334d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.7500000000000001d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6842105263157895d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7000000000000001d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7272727272727273d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6666666666666667d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6800000000000002d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6923076923076924d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7037037037037038d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.7142857142857144d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.75d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.7777777777777778d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.6923076923076923d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.7333333333333333d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.75d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.6842105263157895d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.7272727272727273d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.68d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.6923076923076923d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7037037037037037d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.75d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.7777777777777778d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.6923076923076923d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.7333333333333333d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.75d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.6842105263157895d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.7142857142857143d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.7272727272727273d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.6666666666666666d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.68d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.6923076923076923d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7037037037037037d)); // histogram_measure_canberra
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.7142857142857143d)); // histogram_measure_canberra
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_canberra
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_canberra

				}
		});	
		entry("histogram_measure_chebyshev", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_chebyshev(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.0d)); // histogram_measure_chebyshev
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.0d)); // histogram_measure_chebyshev

					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_chebyshev
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_chebyshev
					
				}
		});		
		entry("histogram_measure_city_block", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_city_block(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));

					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.2d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.4d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.5d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.6d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999998d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8999999999999999d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.1d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.2000000000000002d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.2000000000000002d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.3000000000000003d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.4000000000000004d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.5000000000000004d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.6000000000000005d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.6000000000000005d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.7000000000000006d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.8000000000000007d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.9000000000000008d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.000000000000001d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 8.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 9.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 10.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 11.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 12.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 12.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 13.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 14.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 15.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 16.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 16.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 17.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 18.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 19.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 20.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 40.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 50.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 60.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 70.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 80.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 80.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 90.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 100.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 110.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 120.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 120.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 130.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 150.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 160.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 160.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 170.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 180.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 190.0d)); // histogram_measure_city_block
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 200.0d)); // histogram_measure_city_block
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623157E308d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.7976931348623157E308d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.7976931348623157E308d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 4.9E-324d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623157E308d)); // histogram_measure_city_block
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_city_block
					
					
				}
		});		
		entry("histogram_measure_clark", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_clark(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
	
					addMeasureOpEquivalents( Array.array("XX"));
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6666666666666667d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.75d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7777777777777778d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6666666666666665d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6923076923076923d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.7333333333333334d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.7500000000000001d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6842105263157895d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7000000000000001d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7272727272727273d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6666666666666667d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6800000000000002d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6923076923076924d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7037037037037038d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.7142857142857144d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.75d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.7777777777777778d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.6923076923076923d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.7333333333333333d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.75d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.6842105263157895d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.7272727272727273d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.68d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.6923076923076923d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7037037037037037d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.75d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.7777777777777778d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.6923076923076923d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.7333333333333333d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.75d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.6842105263157895d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.7142857142857143d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.7272727272727273d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.6666666666666666d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.68d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.6923076923076923d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7037037037037037d)); // histogram_measure_clark
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.7142857142857143d)); // histogram_measure_clark
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_clark
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_clark
					
					
				}
		});		
		entry("histogram_measure_cosine", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_cosine(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 1.0d)); // histogram_measure_cosine
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 1.0d)); // histogram_measure_cosine
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_cosine

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_cosine
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_cosine		
					
				}
		});	
		entry("histogram_measure_czekanowski", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_czekanowski(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.33333333333333337d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.28571428571428575d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.25000000000000006d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.22222222222222227d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.20000000000000004d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.33333333333333337d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.30769230769230776d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.28571428571428575d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.26666666666666666d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.25d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.3157894736842105d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.3d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.2727272727272727d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.31999999999999995d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.30769230769230765d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.2962962962962962d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.28571428571428564d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.25d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.2222222222222222d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.2d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.3076923076923077d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.26666666666666666d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.25d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.3157894736842105d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.3d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.2727272727272727d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.32d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.3076923076923077d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.2962962962962963d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.25d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.2222222222222222d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.2d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.3076923076923077d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.26666666666666666d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.25d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.3157894736842105d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.3d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.2727272727272727d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.3333333333333333d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.32d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.3076923076923077d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.2962962962962963d)); // histogram_measure_czekanowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.2857142857142857d)); // histogram_measure_czekanowski
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_czekanowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_czekanowski
					
				}
		});		
		entry("histogram_measure_czekanowski_dCze", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_czekanowski_dCze(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6666666666666666d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7142857142857142d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7777777777777777d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6666666666666666d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7142857142857142d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.7333333333333334d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6842105263157895d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7272727272727273d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.68d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7037037037037037d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.7142857142857144d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.7777777777777778d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.7333333333333334d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.6842105263157895d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.7272727272727273d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.6799999999999999d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7037037037037037d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.7777777777777778d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.7333333333333334d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.75d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.6842105263157895d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.7272727272727273d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.6666666666666667d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.6799999999999999d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.6923076923076923d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7037037037037037d)); // histogram_measure_czekanowski_dCze
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.7142857142857143d)); // histogram_measure_czekanowski_dCze
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_czekanowski_dCze
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_czekanowski_dCze	
					
				}
		});	
		entry("histogram_measure_dice", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_dice(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
			public void initFunction()
			{	
					addMeasureOpEquivalents( Array.array("XX"));
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.28d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.2461538461538462d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.21951219512195125d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.35200000000000004d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.3005780346820809d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.27999999999999997d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.3846153846153846d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.36226415094339626d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.3422818791946309d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.3081081081081081d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.3846153846153846d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.36761487964989054d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.3519999999999999d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.3376146788990825d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.32432432432432423d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.28d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.24615384615384617d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.21951219512195122d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.352d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.30057803468208094d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.28d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.3622641509433962d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.3422818791946309d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.3081081081081081d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.3676148796498906d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.352d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.3376146788990826d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.28d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.24615384615384617d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.21951219512195122d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.352d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.30057803468208094d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.28d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.3622641509433962d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.3422818791946309d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.32432432432432434d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.3081081081081081d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.38461538461538464d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.3676148796498906d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.352d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.3376146788990826d)); // histogram_measure_dice
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.32432432432432434d)); // histogram_measure_dice
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice
					
					
				}
		});	
		entry("histogram_measure_dice_dDice1", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_dice_dDice1(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction(){
					// XX
					addMeasureCategories( Array.array("XX") );	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("XX") );
					addProperties( Array.array("XX"));
					addFaultCategories( Array.array("XX") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7538461538461538d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7804878048780488d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6479999999999999d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.6994219653179191d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6377358490566037d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.6577181208053691d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.6918918918918919d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6323851203501094d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6480000000000001d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.6623853211009175d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.6756756756756758d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.7538461538461538d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.7804878048780488d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.648d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.699421965317919d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.6377358490566039d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.6577181208053691d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.6918918918918919d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.6323851203501094d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.648d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.6623853211009174d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.7538461538461538d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.7804878048780488d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.648d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.699421965317919d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.72d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.6377358490566039d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.6577181208053691d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.6918918918918919d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.6153846153846154d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.6323851203501094d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.648d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.6623853211009174d)); // histogram_measure_dice_dDice1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.6756756756756757d)); // histogram_measure_dice_dDice1
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_dice_dDice1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_dice_dDice1

				}
		});		
		entry("histogram_measure_divergence", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_divergence(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8888888888888891d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 1.0204081632653064d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.1250000000000002d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.2098765432098766d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.28d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.8888888888888885d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.9585798816568049d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0204081632653064d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.0755555555555558d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.125d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.9362880886426593d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.9800000000000001d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.0204081632653064d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.0578512396694217d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8888888888888893d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.9248000000000002d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.9585798816568051d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.9903978052126203d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.0204081632653064d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.125d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.2098765432098766d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.28d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.9585798816568047d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 1.0755555555555556d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 1.125d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.9362880886426593d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.98d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 1.0578512396694215d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.9248d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.9585798816568047d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.99039780521262d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 2.0d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 1.125d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 1.2098765432098766d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 1.28d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.9585798816568047d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 1.0755555555555556d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 1.125d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.9362880886426593d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.98d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 1.0578512396694215d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8888888888888888d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.9248d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.9585798816568047d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.99039780521262d)); // histogram_measure_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 1.0204081632653061d)); // histogram_measure_divergence
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_divergence

				}
		});	
		entry("histogram_measure_euclidean", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_euclidean(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, square_D1D1, sum_D1D, sqrt_DD") );				
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.2d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.4d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.5d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.6d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999998d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8999999999999999d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.1d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.2000000000000002d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.2000000000000002d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.3000000000000003d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.4000000000000004d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.5000000000000004d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.6000000000000005d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.6000000000000005d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.7000000000000006d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.8000000000000007d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.9000000000000008d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.000000000000001d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 8.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 9.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 10.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 11.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 12.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 12.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 13.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 14.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 15.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 16.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 16.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 17.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 18.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 19.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 20.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 40.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 50.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 60.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 70.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 80.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 80.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 90.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 100.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 110.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 120.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 120.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 130.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 150.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 160.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 160.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 170.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 180.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 190.0d)); // histogram_measure_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 200.0d)); // histogram_measure_euclidean

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean
					
				}
		});	
		
		entry("histogram_measure_euclidean_alt1", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
					MathOpsEAlt mop = new MathOpsEAlt();
				try {
					return mop.histogram_measure_euclidean_alt1(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, square_D1D1, sum_D1D, sqrt_DD") );		
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.010000000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.04000000000000001d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.09000000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.16000000000000003d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.16000000000000003d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.25d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.36d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.48999999999999994d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.6399999999999999d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6399999999999997d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8099999999999998d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.2100000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.4400000000000004d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.4400000000000004d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.6900000000000006d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.960000000000001d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 2.2500000000000013d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 2.560000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 2.560000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 2.890000000000002d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 3.2400000000000024d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 3.610000000000003d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 4.0000000000000036d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 4.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 9.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 16.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 16.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 25.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 36.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 49.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 64.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 64.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 81.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 100.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 121.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 144.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 144.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 169.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 196.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 225.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 256.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 256.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 289.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 324.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 361.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 100.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 900.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 1600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 2500.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 3600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 4900.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 6400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 6400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 8100.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 10000.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 12100.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 14400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 14400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 16900.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 19600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 22500.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 25600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 25600.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 28900.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 32400.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 36100.0d)); // histogram_measure_euclidean_alt1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 40000.0d)); // histogram_measure_euclidean_alt1
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean_alt1

				}
		});	
		entry("histogram_measure_euclidean_alt2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				MathOpsEAlt mop = new MathOpsEAlt();
				try {
					return mop.histogram_measure_euclidean_alt2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
			public void initFunction()
			{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, square_D1D1, sum_D1D, sqrt_DD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.2d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.4d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.5d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.6d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999998d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8999999999999999d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.1d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.2000000000000002d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.2000000000000002d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.3000000000000003d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.4000000000000004d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.5000000000000004d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.6000000000000005d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.6000000000000005d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.7000000000000006d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.8000000000000007d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.9000000000000008d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.000000000000001d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 8.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 9.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 10.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 11.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 12.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 12.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 13.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 14.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 15.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 16.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 16.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 17.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 18.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 19.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 20.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 40.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 50.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 60.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 70.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 80.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 80.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 90.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 100.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 110.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 120.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 120.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 130.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 150.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 160.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 160.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 170.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 180.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 190.0d)); // histogram_measure_euclidean_alt2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 200.0d)); // histogram_measure_euclidean_alt2

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_euclidean_alt2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_euclidean_alt2
					
					
				}
		});			
		
		entry("histogram_measure_fidelity", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_fidelity(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sqrt_D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.22360679774997896d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.2449489742783178d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.264575131106459d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.282842712474619d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.3d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.4472135954999579d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.4690415759823429d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.4898979485566356d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.5099019513592785d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.5291502622129182d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.670820393249937d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.692820323027551d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7141428428542852d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7348469228349536d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7549834435270751d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8944271909999161d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.9165151389911682d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.9380831519646861d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.9591663046625442d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.9797958971132714d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 2.23606797749979d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.449489742783178d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 2.6457513110645907d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 2.8284271247461903d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 3.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 4.47213595499958d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 4.69041575982343d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 4.898979485566356d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 5.0990195135927845d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 5.291502622129181d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 6.708203932499369d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 6.928203230275509d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 7.14142842854285d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 7.3484692283495345d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 7.54983443527075d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 8.94427190999916d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 9.16515138991168d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 9.38083151964686d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 9.591663046625438d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 9.797958971132712d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 22.360679774997898d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 24.49489742783178d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 26.457513110645905d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 28.284271247461902d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 30.0d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 44.721359549995796d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 46.9041575982343d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 48.98979485566356d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 50.99019513592785d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 52.91502622129181d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 67.08203932499369d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 69.2820323027551d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 71.4142842854285d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 73.48469228349535d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 75.49834435270749d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 89.44271909999159d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 91.6515138991168d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 93.8083151964686d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 95.91663046625439d)); // histogram_measure_fidelity
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 97.97958971132712d)); // histogram_measure_fidelity
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 2.980232238769531E-8d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 2.980232238769531E-8d)); // histogram_measure_fidelity
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_fidelity
					
				}
		});		
		entry("histogram_measure_gower", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_gower(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("reciprocal1_DD, sub_D1D1D1, abs_D1D1, sum_D1D, mult_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.2d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.4d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.5d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.6d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999998d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8999999999999999d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.1d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.2000000000000002d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.2000000000000002d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.3000000000000003d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.4000000000000004d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.5000000000000004d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.6000000000000005d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.6000000000000005d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.7000000000000006d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.8000000000000007d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.9000000000000008d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.000000000000001d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 8.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 9.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 10.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 11.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 12.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 12.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 13.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 14.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 15.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 16.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 16.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 17.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 18.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 19.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 20.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 40.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 50.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 60.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 70.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 80.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 80.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 90.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 100.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 110.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 120.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 120.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 130.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 150.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 160.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 160.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 170.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 180.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 190.0d)); // histogram_measure_gower
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 200.0d)); // histogram_measure_gower
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623157E308d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.7976931348623157E308d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.7976931348623157E308d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 4.9E-324d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623157E308d)); // histogram_measure_gower
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_gower

				}
		});
		entry("histogram_measure_harmonic_mean", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_harmonic_mean(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, add_D1D1D1, div_D1D1D1, sum_D1D, mult_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.16666666666666669d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.17142857142857143d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.175d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.1777777777777778d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.18000000000000002d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.3333333333333333d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.3384615384615385d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.34285714285714286d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.3466666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.35000000000000003d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.5000000000000001d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.5052631578947369d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.5100000000000001d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.5142857142857143d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.5181818181818183d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6666666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6720000000000002d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6769230769230771d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.6814814814814816d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.6857142857142858d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.6666666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.7142857142857142d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.75d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.7777777777777777d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.8d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 3.3333333333333335d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 3.3846153846153846d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 3.4285714285714284d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 3.466666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 3.5d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 5.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 5.052631578947368d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 5.1d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 5.142857142857143d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 5.181818181818182d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 6.666666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 6.72d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 6.769230769230769d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 6.814814814814815d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 6.857142857142857d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 16.666666666666668d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 17.142857142857142d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 17.5d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 17.77777777777778d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 18.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 33.333333333333336d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 33.84615384615385d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 34.285714285714285d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 34.666666666666664d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 35.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 50.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 50.526315789473685d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 51.0d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 51.42857142857143d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 51.81818181818182d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 66.66666666666667d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 67.2d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 67.6923076923077d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 68.14814814814815d)); // histogram_measure_harmonic_mean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 68.57142857142857d)); // histogram_measure_harmonic_mean
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0E-323d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0E-323d)); // histogram_measure_harmonic_mean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_harmonic_mean

				}
		});	
		entry("histogram_measure_hellinger", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_hellinger(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sqrt_D1D1, sum_D1D, sub_DDD, sqrt_DD, mult_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.7622635469759012d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 1.7378734427128832d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.7151383254927761d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.693702792730036d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.6733200530681511d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 1.486992137840738d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 1.457337879858555d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.428428579164341d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.4001400624804956d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.3723698303111764d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.1474835192717374d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.108475849033165d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.0693122222170937d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.029860334540653d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.9899829422225918d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.649839392465812d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.5778749380578182d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.4976619255491179d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.4041469798845754d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.28428227441561377d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 2.0d)); // histogram_measure_hellinger
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 2.0d)); // histogram_measure_hellinger
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, null)); // histogram_measure_hellinger

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 2.0d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 2.0d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.9999999701976774d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 2.0d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.9999999701976774d)); // histogram_measure_hellinger
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 2.0d)); // histogram_measure_hellinger

				}
		});	
		entry("histogram_measure_hellinger_dH2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_hellinger_dH2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sqrt_D1D1, sub_D1D1D1, square_D1D1, sum_D1D, mult_DDD, sqrt_DD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.4472135954999579d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.6324555320336759d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.7745966692414835d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.8944271909999159d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.5527864045000421d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.6482315195103743d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.7360023611199652d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.8176974685673938d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8944271909999157d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7817580303394189d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8507841653854566d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.9167378064492909d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.9799960176260343d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.0408645210344754d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.957454138327394d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.0142577127583483d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.0693122222170943d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.1227699268595444d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.1747621997203095d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.1055728090000843d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.154962962192004d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.2031905053403875d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.2503338679528062d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.296463039020749d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.4142135623730951d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2.449489742783178d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.8284271247461903d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.7480640977952844d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.0498880527646595d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 2.3274438244008464d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 2.585786437626905d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 2.8284271247461903d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 2.4721359549995796d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 2.6904157598234293d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 2.898979485566356d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 3.099019513592784d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 3.2915026221291805d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 3.0277358322684833d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 3.2073645067092023d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 3.381462152062123d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 3.5505102572168217d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 3.714924260185799d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 3.4961281955905688d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 3.6523135736616696d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 3.8048224559646098d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 3.9539028583790774d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 4.099776105529319d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 4.47213595499958d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 6.324555320336759d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 7.745966692414834d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 8.94427190999916d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 5.527864045000421d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 6.482315195103743d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 7.360023611199652d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 8.176974685673938d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 8.944271909999157d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 7.817580303394192d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 8.507841653854568d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 9.16737806449291d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 9.799960176260338d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 10.408645210344753d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 9.574541383273939d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 10.142577127583484d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 10.693122222170942d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 11.227699268595442d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 11.747621997203092d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 11.055728090000843d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 11.549629621920035d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 12.031905053403872d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 12.503338679528056d)); // histogram_measure_hellinger_dH2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 12.964630390207486d)); // histogram_measure_hellinger_dH2

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 3.1434555694052576E-162d)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 3.1434555694052576E-162d)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_hellinger_dH2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_hellinger_dH2
					
				}
		});	
		entry("histogram_measure_inner_product", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_inner_product(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sum_D1D") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.05d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.06d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.06999999999999999d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.08d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.09d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.19999999999999998d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.21999999999999997d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.24d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.26d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.28d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.4500000000000001d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.48000000000000015d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.5100000000000002d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.5400000000000003d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.5700000000000003d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8000000000000003d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8400000000000003d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8800000000000003d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.9200000000000004d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.9600000000000004d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 5.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 6.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 7.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 8.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 9.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 20.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 22.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 24.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 26.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 28.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 45.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 48.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 51.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 54.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 57.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 80.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 84.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 88.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 92.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 96.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 500.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 600.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 700.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 800.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 900.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 2000.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 2200.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 2400.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 2600.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 2800.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 4500.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 4800.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 5100.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 5400.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 5700.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 8000.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 8400.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 8800.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 9200.0d)); // histogram_measure_inner_product
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 9600.0d)); // histogram_measure_inner_product

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 8.881784197001251E-16d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 8.881784197001251E-16d)); // histogram_measure_inner_product
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_inner_product

					
					
				}
		});	
		entry("histogram_measure_intersection_dNonIS", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_intersection_dNonIS(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				
			public void initFunction()
			{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("H_D1D1D, sub_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.9d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.9d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.9d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.9d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.9d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.8d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.7d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.7d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.6d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.6d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, -1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, -1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, -1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, -1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, -1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, -2.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, -2.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, -2.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, -2.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, -2.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, -3.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, -3.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, -3.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, -3.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, -3.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, -9.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, -9.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, -9.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, -9.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, -9.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, -19.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, -19.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, -19.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, -19.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, -19.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, -29.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, -29.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, -29.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, -29.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, -29.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, -39.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, -39.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, -39.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, -39.0d)); // histogram_measure_intersection_dNonIS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, -39.0d)); // histogram_measure_intersection_dNonIS
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, -1.7976931348623157E308d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_intersection_dNonIS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_intersection_dNonIS

				}
		});		
		entry("histogram_measure_intersection_dNonIS2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_intersection_dNonIS2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("reciprocal1_DD, sub_D1D1D1, abs_D1D1, sum_D1D, mult_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.05d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.1d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.15000000000000002d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.2d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.2d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.25d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.3d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.35d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.39999999999999997d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.3999999999999999d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.44999999999999996d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.55d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.6000000000000001d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6000000000000001d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6500000000000001d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7000000000000002d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7500000000000002d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8000000000000003d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8000000000000003d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8500000000000003d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.9000000000000004d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.9500000000000004d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.0000000000000004d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 2.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 3.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 3.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 4.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 4.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 4.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 5.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 5.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 6.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 6.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 6.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 7.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 7.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 8.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 8.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 8.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 9.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 9.5d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 10.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 5.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 10.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 15.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 20.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 20.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 25.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 30.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 35.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 40.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 40.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 45.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 50.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 55.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 60.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 60.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 65.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 70.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 75.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 80.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 80.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 85.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 90.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 95.0d)); // histogram_measure_intersection_dNonIS2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 100.0d)); // histogram_measure_intersection_dNonIS2
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 8.988465674311579E307d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 8.988465674311579E307d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 8.988465674311579E307d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 8.988465674311579E307d)); // histogram_measure_intersection_dNonIS2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_intersection_dNonIS2
				}
		});		
		entry("histogram_measure_intersection_IS", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_intersection_IS(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, sum_D1D") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.1d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.1d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.1d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.1d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.1d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.2d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.2d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.2d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.2d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.2d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.30000000000000004d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.30000000000000004d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.30000000000000004d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.30000000000000004d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.30000000000000004d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.4d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.4d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.4d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.4d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.4d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 2.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 2.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 2.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 2.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 3.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 3.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 3.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 3.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 3.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 4.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 4.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 4.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 4.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 4.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 10.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 10.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 10.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 10.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 10.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 20.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 20.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 20.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 20.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 20.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 30.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 30.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 30.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 30.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 30.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 40.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 40.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 40.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 40.0d)); // histogram_measure_intersection_IS
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 40.0d)); // histogram_measure_intersection_IS
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623157E308d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 4.9E-324d)); // histogram_measure_intersection_IS
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_intersection_IS
				
				}
		});	
		entry("histogram_measure_jaccard", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jaccard(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sum_D1D, square_D1D1, add_DDD, sub_DDD, mult_D1D1D1, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.16279069767441862d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.14035087719298248d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.12328767123287673d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.2380952380952381d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.21359223300970875d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.1768707482993197d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.1627906976744186d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.22119815668202764d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.20647773279352227d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.19354838709677422d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.18210862619808307d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.23809523809523805d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.22520107238605896d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.21359223300970867d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.20309050772626927d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.1935483870967741d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.16279069767441862d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.14035087719298245d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.1232876712328767d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.21359223300970873d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.17687074829931973d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.16279069767441862d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.22119815668202766d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.20647773279352227d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.18210862619808307d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.225201072386059d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.21359223300970873d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.20309050772626933d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.16279069767441862d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.14035087719298245d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.1232876712328767d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.21359223300970873d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.17687074829931973d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.16279069767441862d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.22119815668202766d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.20647773279352227d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.18210862619808307d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.23809523809523808d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.225201072386059d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.21359223300970873d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.20309050772626933d)); // histogram_measure_jaccard
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.1935483870967742d)); // histogram_measure_jaccard
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard

				}
		});	
		entry("histogram_measure_jaccard_dJac1", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jaccard_dJac1(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("H_D1D1D, sub_DDD") );
		
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8372093023255813d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8767123287671232d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.7788018433179724d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7935222672064777d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8178913738019169d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.761904761904762d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.7747989276139411d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.7864077669902914d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7969094922737308d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8064516129032259d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8372093023255813d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8767123287671232d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8372093023255813d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.7788018433179723d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7935222672064777d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8178913738019169d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.774798927613941d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7969094922737306d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8372093023255813d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8767123287671232d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8372093023255813d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.7788018433179723d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7935222672064777d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8178913738019169d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.774798927613941d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7969094922737306d)); // histogram_measure_jaccard_dJac1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac1
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac1

				}
		});			
		entry("histogram_measure_jaccard_dJac2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jaccard_dJac2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sum_D1D, square_D1D1, add_DDD, sub_DDD, sub_D1D1D1, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.761904761904762d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8064516129032259d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8767123287671234d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7619047619047616d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8064516129032259d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.7788018433179723d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7935222672064778d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.806451612903226d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8178913738019171d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.7619047619047621d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.7747989276139412d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.7864077669902914d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7969094922737309d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8767123287671232d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.7788018433179723d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7935222672064778d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8178913738019169d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.774798927613941d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7969094922737306d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.8596491228070176d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8767123287671232d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8231292517006803d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8372093023255814d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.7788018433179723d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7935222672064778d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8178913738019169d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.7619047619047619d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.774798927613941d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.7864077669902912d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7969094922737306d)); // histogram_measure_jaccard_dJac2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8064516129032258d)); // histogram_measure_jaccard_dJac2
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jaccard_dJac2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jaccard_dJac2
				}
		});	
		
		entry("histogram_measure_jeffreys", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jeffreys(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("div_D1D1D1, ln_D1D1, sub_D1D1D1, mult_D1D1D1, sum_D1D") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 74.44400719213813d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 148.88801438427626d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 223.3320215764144d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 297.7760287685525d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6437751649736402d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8958797346140275d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.167546089433188d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.455609079175885d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.7577796618689752d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 1.28755032994728d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 1.5342732830145824d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.791759469228055d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 2.0589823945917507d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 2.3350921788663763d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.9313254949209206d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 2.1761693636431736d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 2.4284414775433496d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 2.687639203842083d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 2.9533227047973303d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 2.5751006598945616d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 2.8189877302260067d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 3.068546566029167d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 3.323479724137594d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 3.583518938456112d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 744.4400719213812d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1488.8801438427624d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2233.3202157641435d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2977.760287685525d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 6.437751649736401d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 8.958797346140274d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 11.67546089433188d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 14.55609079175885d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 17.577796618689757d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 12.875503299472802d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 15.342732830145827d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 17.91759469228055d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 20.589823945917505d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 23.35092178866376d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 19.313254949209202d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 21.76169363643173d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 24.28441477543349d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 26.876392038420825d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 29.533227047973295d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 25.751006598945605d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 28.18987730226005d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 30.685465660291655d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 33.23479724137592d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 35.8351893845611d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 7444.400719213812d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 14888.801438427625d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 22333.202157641437d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 29777.60287685525d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 64.37751649736401d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 89.58797346140275d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 116.7546089433188d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 145.5609079175885d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 175.77796618689757d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 128.75503299472803d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 153.42732830145826d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 179.1759469228055d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 205.89823945917504d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 233.5092178866376d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 193.13254949209204d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 217.6169363643173d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 242.8441477543349d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 268.76392038420823d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 295.3322704797329d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 257.51006598945605d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 281.8987730226005d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 306.8546566029165d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 332.34797241375924d)); // histogram_measure_jeffreys
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 358.351893845611d)); // histogram_measure_jeffreys
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 3.676E-321d)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jeffreys
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_jeffreys

				}
		});		
		entry("histogram_measure_jensen_difference", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jensen_difference(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mkConstArray_DDD1, add_D1D1D1, div_D1D1D1, ln_D1D1, mult_D1D1D1, sub_D1D1D1, sum_D1D") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.03465735902799727d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.06931471805599451d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.10397207708399181d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.13862943611198908d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.07277579150809221d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.09906080179503773d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.1265508077214034d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.154941788122611d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.18403210358424849d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.14555158301618434d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.1714857031090639d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.1981216035900754d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.22535453499929484d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.25310161544280685d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.21832737452427659d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.2441356124158711d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.2704380927539545d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.2971824053851132d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.3243240734301273d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.29110316603236874d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.3168466264482531d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.342971406218128d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.36944614519258234d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.396243207180151d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.34657359027997264d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.6931471805599453d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.039720770839918d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.3862943611198906d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.7277579150809217d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.9906080179503771d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.265508077214034d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.549417881226109d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.8403210358424857d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 1.4555158301618452d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 1.7148570310906397d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 1.981216035900756d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.2535453499929474d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 2.531016154428066d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 2.183273745242765d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 2.441356124158709d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 2.7043809275395425d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 2.9718240538511296d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 3.2432407343012706d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 2.9110316603236797d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 3.168466264482525d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 3.429714062181283d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 3.694461451925818d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 3.9624320718015156d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 3.4657359027997288d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 6.931471805599447d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 10.39720770839918d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 13.862943611198908d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 7.277579150809217d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 9.906080179503775d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 12.655080772140366d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 15.494178812261111d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 18.403210358424843d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 14.555158301618434d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 17.148570310906393d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 19.812160359007464d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 22.535453499929474d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 25.310161544280675d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 21.832737452427637d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 24.413561241587047d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 27.04380927539546d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 29.71824053851134d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 32.432407343012756d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 29.110316603236924d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 31.684662644825153d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 34.29714062181279d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 36.944614519258266d)); // histogram_measure_jensen_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 39.624320718015156d)); // histogram_measure_jensen_difference
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, -1.84E-321d)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, -1.84E-321d)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_jensen_difference

				}
		});		
		entry("histogram_measure_jensen_shannon", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_jensen_shannon(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("add_D1D1D1, mkConstArray_DDD1, mult_D1D1D1, div_D1D1D1, ln_D1D1, sum_D1D, add_DDD, div_DDD, mult_DDD") );		
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.03465735902799726d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.06931471805599453d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.10397207708399181d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.13862943611198905d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.0727757915080922d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.09906080179503773d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.12655080772140337d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.15494178812261106d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.18403210358424854d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.1455515830161843d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.17148570310906386d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.19812160359007547d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.22535453499929484d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.25310161544280685d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.2183273745242766d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.24413561241587106d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.2704380927539545d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.2971824053851133d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.32432407343012737d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.29110316603236885d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.3168466264482531d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.3429714062181281d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.36944614519258245d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.39624320718015105d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.34657359027997264d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.6931471805599453d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0397207708399179d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.3862943611198906d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.7277579150809218d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.9906080179503767d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.265508077214034d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.5494178812261101d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 1.8403210358424853d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 1.4555158301618436d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 1.714857031090639d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 1.9812160359007533d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.2535453499929483d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 2.531016154428068d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 2.183273745242766d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 2.4413561241587103d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 2.704380927539544d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 2.9718240538511296d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 3.2432407343012732d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 2.911031660323687d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 3.1684662644825297d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 3.429714062181278d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 3.694461451925822d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 3.9624320718015067d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 3.4657359027997265d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 6.931471805599453d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 10.39720770839918d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 13.862943611198906d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 7.277579150809219d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 9.906080179503768d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 12.65508077214034d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 15.494178812261099d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 18.403210358424857d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 14.555158301618437d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 17.14857031090639d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 19.812160359007535d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 22.53545349992948d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 25.31016154428068d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 21.832737452427658d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 24.413561241587097d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 27.043809275395443d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 29.718240538511303d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 32.43240734301273d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 29.110316603236875d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 31.684662644825295d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 34.29714062181278d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 36.944614519258224d)); // histogram_measure_jensen_shannon
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 39.62432071801507d)); // histogram_measure_jensen_shannon
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_jensen_shannon
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_jensen_shannon

				}
		});	
		entry("histogram_measure_k_divergence", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_k_divergence(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("add_D1D1D1, mkConstArray_DDD1, mult_D1D1D1, div_D1D1D1, ln_D1D1, mult_D1D1D1, sum_D1D") );		
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, -0.10986122886681096d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, -0.12527629684953678d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, -0.13862943611198905d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, -0.1504077396776274d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, -0.16094379124341004d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, -0.21972245773362192d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, -0.2357309992683292d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, -0.25055259369907357d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, -0.2643511679964639d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, -0.2772588722239781d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, -0.32958368660043297d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, -0.3458038529815157d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, -0.36119184129778087d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, -0.37582889054861046d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, -0.38978489523907833d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, -0.43944491546724396d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, -0.45577371327534605d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, -0.4714619985366585d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, -0.4865581297297974d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, -0.5011051873981474d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, -1.0986122886681098d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, -1.252762968495368d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, -1.3862943611198906d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, -1.5040773967762742d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, -1.6094379124341003d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, -2.1972245773362196d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, -2.3573099926832923d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, -2.505525936990736d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, -2.643511679964639d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, -2.772588722239781d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, -3.295836866004329d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, -3.4580385298151564d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, -3.6119184129778086d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, -3.758288905486104d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, -3.897848952390783d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, -4.394449154672439d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, -4.557737132753459d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, -4.714619985366585d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, -4.865581297297973d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, -5.011051873981472d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, -10.986122886681098d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, -12.52762968495368d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, -13.862943611198906d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, -15.040773967762743d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, -16.094379124341003d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, -21.972245773362197d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, -23.573099926832924d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, -25.05525936990736d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, -26.43511679964639d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, -27.725887222397812d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, -32.95836866004329d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, -34.58038529815157d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, -36.119184129778084d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, -37.58288905486104d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, -38.978489523907825d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, -43.94449154672439d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, -45.57737132753459d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, -47.14619985366585d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, -48.655812972979724d)); // histogram_measure_k_divergence
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, -50.11051873981472d)); // histogram_measure_k_divergence
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 4.9E-324d)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, -3.676E-321d)); // histogram_measure_k_divergence
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_k_divergence
					
				}
		});		
		entry("histogram_measure_kulczynski", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kulczynski(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, sum_D1D, min_D1D1D1, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 5.999999999999999d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 6.999999999999999d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 7.999999999999999d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 3.999999999999999d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 4.499999999999999d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 5.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 6.000000000000001d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 4.333333333333334d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 4.666666666666667d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 5.000000000000001d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 5.333333333333334d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 4.000000000000001d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 4.250000000000001d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 4.500000000000002d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 4.750000000000002d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 5.000000000000002d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 4.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 5.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 6.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 4.333333333333333d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 4.666666666666667d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 5.333333333333333d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 4.25d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 4.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 4.75d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 6.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 7.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 8.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 4.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 5.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 6.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 4.333333333333333d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 4.666666666666667d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 5.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 5.333333333333333d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 4.0d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 4.25d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 4.5d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 4.75d)); // histogram_measure_kulczynski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 5.0d)); // histogram_measure_kulczynski					
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_kulczynski

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_kulczynski

				}
		});		
		entry("histogram_measure_kulczynski_s", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kulczynski_s(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("H_D1D1D, reciprocal1_DD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.16666666666666669d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.14285714285714288d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.12500000000000003d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.25000000000000006d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.22222222222222227d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.16666666666666663d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.23076923076923073d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.19999999999999996d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.18749999999999997d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.24999999999999994d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.23529411764705876d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.22222222222222213d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.21052631578947362d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.19999999999999993d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.14285714285714285d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.125d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.23076923076923078d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.1875d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.23529411764705882d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.21052631578947367d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.14285714285714285d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.125d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.23076923076923078d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.2d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.1875d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.25d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.23529411764705882d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.21052631578947367d)); // histogram_measure_kulczynski_s
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.2d)); // histogram_measure_kulczynski_s
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_kulczynski_s
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s

				}
		});			
		entry("histogram_measure_kulczynski_s2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kulczynski_s2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, sum_D1D, sub_D1D1D1, abs_D1D1, div_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.16666666666666669d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.14285714285714288d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.12500000000000003d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.25000000000000006d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.22222222222222227d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.23076923076923075d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.19999999999999998d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.18749999999999997d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.24999999999999994d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.23529411764705874d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.22222222222222215d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.21052631578947362d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.19999999999999993d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.14285714285714285d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.125d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.23076923076923078d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.1875d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.23529411764705882d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.21052631578947367d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.14285714285714285d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.125d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.18181818181818182d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.16666666666666666d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.23076923076923078d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.21428571428571427d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.2d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.1875d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.25d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.23529411764705882d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.2222222222222222d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.21052631578947367d)); // histogram_measure_kulczynski_s2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.2d)); // histogram_measure_kulczynski_s2		
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_kulczynski_s2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_kulczynski_s2

				}
		});			
		entry("histogram_measure_kullback_leibler", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kullback_leibler(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("div_D1D1D1, ln_D1D1, mult_D1D1D1, sum_D1D") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, -0.16094379124341004d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, -0.1791759469228055d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, -0.19459101490553132d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, -0.2079441541679836d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, -0.21972245773362192d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, -0.3218875824868201d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, -0.340949618447685d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, -0.358351893845611d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, -0.37436043538031827d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, -0.3891820298110627d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, -0.48283137373023016d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, -0.5021929300715016d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, -0.520380316616432d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, -0.5375278407684165d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, -0.5537480071494993d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, -0.6437751649736403d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, -0.6632912306414132d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, -0.6818992368953702d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, -0.6996799419237038d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, -0.7167037876912221d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, -1.6094379124341003d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, -1.791759469228055d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, -1.9459101490553135d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, -2.0794415416798357d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, -2.1972245773362196d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, -3.2188758248682006d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, -3.4094961844768505d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, -3.58351893845611d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, -3.7436043538031827d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, -3.891820298110627d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, -4.828313737302301d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, -5.021929300715015d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, -5.203803166164319d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, -5.375278407684165d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, -5.5374800714949926d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, -6.437751649736401d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, -6.63291230641413d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, -6.818992368953701d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, -6.996799419237036d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, -7.16703787691222d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, -16.094379124341003d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, -17.91759469228055d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, -19.459101490553135d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, -20.79441541679836d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, -21.972245773362197d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, -32.18875824868201d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, -34.094961844768505d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, -35.8351893845611d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, -37.436043538031825d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, -38.91820298110627d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, -48.28313737302301d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, -50.21929300715015d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, -52.03803166164319d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, -53.75278407684165d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, -55.37480071494993d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, -64.37751649736401d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, -66.3291230641413d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, -68.18992368953701d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, -69.96799419237037d)); // histogram_measure_kullback_leibler
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, -71.6703787691222d)); // histogram_measure_kullback_leibler
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, -3.676E-321d)); // histogram_measure_kullback_leibler
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_kullback_leibler

				}
		});	
		entry("histogram_measure_kumar_hassebrook_pce", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kumar_hassebrook_pce(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sum_D1D, square_D1D1, add_DDD, sub_DDD, mult_D1D1D1, div_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.16279069767441862d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.14035087719298248d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.12328767123287673d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.2380952380952381d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.21359223300970875d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.1768707482993197d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.1627906976744186d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.22119815668202764d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.20647773279352227d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.19354838709677422d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.18210862619808307d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.23809523809523805d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.22520107238605896d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.21359223300970867d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.20309050772626927d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.1935483870967741d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.16279069767441862d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.14035087719298245d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.1232876712328767d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.21359223300970873d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.17687074829931973d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.16279069767441862d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.22119815668202766d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.20647773279352227d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.18210862619808307d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.225201072386059d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.21359223300970873d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.20309050772626933d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.16279069767441862d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.14035087719298245d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.1232876712328767d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.21359223300970873d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.17687074829931973d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.16279069767441862d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.22119815668202766d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.20647773279352227d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.18210862619808307d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.23809523809523808d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.225201072386059d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.21359223300970873d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.20309050772626933d)); // histogram_measure_kumar_hassebrook_pce
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.1935483870967742d)); // histogram_measure_kumar_hassebrook_pce
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_hassebrook_pce
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_hassebrook_pce
					
				}
		});	
		entry("histogram_measure_kumar_johnson_difference", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_kumar_johnson_difference(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, div_DDD, mkConstArray_DDD1, pow_D1D1D1, square_D1D1, sub_D1D1D1, div_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 2.575950310079757d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 4.167534631818602d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 6.220215327237568d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 8.770333795404394d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 11.851851851851846d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 5.1519006201595134d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 6.632965014072615d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 8.335069263637203d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 10.267811113725116d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 12.440430654475138d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 7.727850930239278d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 9.172802753382785d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 10.76293711645059d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 12.50260389545581d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 14.396040102612918d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 10.303801240319034d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 11.73083524520123d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 13.265930028145238d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 14.911557019833246d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 16.67013852727442d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 25.759503100797577d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 41.675346318186016d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 62.20215327237569d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 87.70333795404397d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 118.51851851851852d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 51.519006201595154d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 66.32965014072616d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 83.35069263637203d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 102.67811113725116d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 124.40430654475138d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 77.27850930239273d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 91.7280275338278d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 107.62937116450584d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 125.02603895455805d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 143.96040102612912d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 103.03801240319031d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 117.30835245201227d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 132.65930028145232d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 149.11557019833236d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 166.70138527274406d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 257.59503100797576d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 416.7534631818602d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 622.0215327237568d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 877.0333795404397d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 1185.1851851851852d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 515.1900620159515d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 663.2965014072616d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 833.5069263637204d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 1026.7811113725118d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 1244.0430654475135d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 772.7850930239273d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 917.2802753382781d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 1076.2937116450585d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 1250.2603895455804d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 1439.604010261291d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 1030.380124031903d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 1173.0835245201229d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 1326.5930028145233d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 1491.1557019833235d)); // histogram_measure_kumar_johnson_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 1667.0138527274407d)); // histogram_measure_kumar_johnson_difference
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_kumar_johnson_difference

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_kumar_johnson_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, null)); // histogram_measure_kumar_johnson_difference
					
				}
		});		
		entry("histogram_measure_lorentzian", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_lorentzian(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, mkConstArray_DDD1, add_D1D1D1, ln_D1D1, sum_D1D") );		
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.09531017980432493d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.1823215567939546d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.26236426446749106d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.3364722366212129d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.3364722366212129d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.4054651081081644d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.47000362924573563d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.5306282510621704d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.587786664902119d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.587786664902119d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6418538861723947d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.6931471805599453d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.7419373447293773d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.7884573603642703d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.7884573603642703d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8329091229351041d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8754687373539001d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.9162907318741552d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.9555114450274366d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.9555114450274366d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.9932517730102837d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.0296194171811586d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.0647107369924287d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.09861228866811d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.6931471805599453d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0986122886681098d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.3862943611198906d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.6094379124341003d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.6094379124341003d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.791759469228055d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.9459101490553132d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 2.0794415416798357d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 2.1972245773362196d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 2.1972245773362196d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 2.302585092994046d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 2.3978952727983707d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.4849066497880004d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 2.5649493574615367d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 2.5649493574615367d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 2.6390573296152584d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 2.70805020110221d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 2.772588722239781d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 2.833213344056216d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 2.833213344056216d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 2.8903717578961645d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 2.9444389791664403d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 2.995732273553991d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 3.044522437723423d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 2.3978952727983707d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 3.044522437723423d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 3.4339872044851463d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 3.713572066704308d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 3.713572066704308d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 3.9318256327243257d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 4.110873864173311d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 4.2626798770413155d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 4.394449154672439d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 4.394449154672439d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 4.51085950651685d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 4.61512051684126d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 4.709530201312334d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 4.795790545596741d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 4.795790545596741d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 4.875197323201151d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 4.948759890378168d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 5.017279836814924d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 5.081404364984463d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 5.081404364984463d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 5.14166355650266d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 5.198497031265826d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 5.25227342804663d)); // histogram_measure_lorentzian
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 5.303304908059076d)); // histogram_measure_lorentzian
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 709.782712893384d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 709.782712893384d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 709.782712893384d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 709.782712893384d)); // histogram_measure_lorentzian
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_lorentzian

				}
		});	
		entry("histogram_measure_matusita", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_matusita(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sqrt_D1D1, sum_D1D, mult_DDD, sub_DDD, sqrt_DD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.2461085043045177d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 1.2288620961862908d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 1.212785940628882d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.197628730054002d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.1832159566199232d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 1.0514622242382672d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 1.0304934973280104d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0100515347677705d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.9900485327909148d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.9704120133088644d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8113933777768499d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.7838107896328667d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7561179235353633d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7282212262287422d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7000236517046047d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.4595058410947219d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.40861928737843933d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.35190012229413603d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.28577507007244646d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.20101792401041546d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, null)); // histogram_measure_matusita
				
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.4142135623730951d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.4142135623730951d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.4142135412996706d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.4142135623730951d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.4142135412996706d)); // histogram_measure_matusita
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.4142135623730951d)); // histogram_measure_matusita

				}
		});	
		
		entry("histogram_measure_matusita_dM2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_matusita_dM2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sqrt_D1D1, sum_D1D, mult_DDD, sub_DDD, sqrt_DD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.31622776601683794d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.4472135954999579d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.5477225575051662d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.6324555320336759d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.39087901516970963d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.45836890322464546d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.5204322605172376d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.578199424983078d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.6324555320336758d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.5527864045000419d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6015952526701935d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.6482315195103743d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.6929618295991802d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.7360023611199653d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.677022313886423d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.7171885065621856d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7561179235353638d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7939182289947079d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8306823177038561d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.7817580303394193d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8166821425852681d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.850784165385457d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8841195567766346d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.9167378064492911d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.4142135623730951d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.7320508075688772d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.2360679774997898d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.4494897427831779d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.6457513110645907d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 1.8284271247461903d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 2.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 1.7480640977952844d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 1.9024112279823047d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 2.0498880527646595d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.1913377130908938d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 2.327443824400846d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 2.14093253863854d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 2.267949192431123d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 2.3910548180487834d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 2.5105898795504076d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 2.626848135971797d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 2.4721359549995796d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 2.58257569495584d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 2.6904157598234297d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 2.795831523312719d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 2.8989794855663558d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 3.1622776601683795d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 4.47213595499958d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 5.477225575051661d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 6.324555320336759d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 3.908790151697096d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 4.583689032246454d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 5.204322605172376d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 5.781994249830779d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 6.324555320336758d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 5.52786404500042d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 6.015952526701936d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 6.482315195103743d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 6.9296182959918d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 7.360023611199653d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 6.770223138864229d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 7.171885065621857d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 7.561179235353637d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 7.939182289947078d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 8.30682317703856d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 7.817580303394192d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 8.166821425852678d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 8.507841653854566d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 8.841195567766341d)); // histogram_measure_matusita_dM2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 9.167378064492908d)); // histogram_measure_matusita_dM2

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.3407807929942596E154d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 2.2227587494850775E-162d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.3407807929942596E154d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.3407807929942596E154d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 2.2227587494850775E-162d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.3407807929942596E154d)); // histogram_measure_matusita_dM2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_matusita_dM2
			
				}
		});	
		
	
		
		entry("histogram_measure_minkowski", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_minkowski(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, square_D1D1, sum_D1D, sqrt_DD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.2d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.4d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.5d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.6d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.7999999999999999d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999998d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8999999999999999d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.1d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.2000000000000002d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.2000000000000002d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.3000000000000003d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.4000000000000004d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.5000000000000004d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.6000000000000005d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.6000000000000005d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.7000000000000006d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.8000000000000007d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.9000000000000008d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.000000000000001d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 4.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 5.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 6.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 7.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 8.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 8.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 9.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 10.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 11.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 12.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 12.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 13.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 14.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 15.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 16.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 16.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 17.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 18.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 19.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 20.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 40.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 50.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 60.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 70.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 80.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 80.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 90.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 100.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 110.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 120.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 120.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 130.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 150.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 160.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 160.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 170.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 180.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 190.0d)); // histogram_measure_minkowski
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 200.0d)); // histogram_measure_minkowski
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_minkowski
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_minkowski
					
				}
		});		
		entry("histogram_measure_motyka", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_motyka(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{

					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, sum_D1D, add_D1D1D1, div_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.16666666666666669d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.14285714285714288d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.12500000000000003d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.11111111111111113d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.10000000000000002d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.16666666666666669d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.15384615384615388d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.14285714285714288d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.13333333333333333d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.125d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.15789473684210525d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.15d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.13636363636363635d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.15999999999999998d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.15384615384615383d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.1481481481481481d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.14285714285714282d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.125d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.1111111111111111d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.1d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.15384615384615385d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.13333333333333333d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.125d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.15789473684210525d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.15d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.13636363636363635d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.16d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.15384615384615385d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.14814814814814814d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.125d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.1111111111111111d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.1d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.15384615384615385d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.13333333333333333d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.125d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.15789473684210525d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.15d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.13636363636363635d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.16666666666666666d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.16d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.15384615384615385d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.14814814814814814d)); // histogram_measure_motyka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.14285714285714285d)); // histogram_measure_motyka
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_motyka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.5d)); // histogram_measure_motyka
					
				}
		});	
		entry("histogram_measure_motyka_dMot", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_motyka_dMot(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
	
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("H_D1D1D, sub_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8333333333333333d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.8888888888888888d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.9d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.8333333333333333d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.85d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8400000000000001d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8518518518518519d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.8888888888888888d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.9d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.85d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.84d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8518518518518519d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.8888888888888888d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.9d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.875d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.85d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.84d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8518518518518519d)); // histogram_measure_motyka_dMot
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_motyka_dMot
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.5d)); // histogram_measure_motyka_dMot
					
				}
		});		
		entry("histogram_measure_motyka_dMot2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_motyka_dMot2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
			
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("max_D1D1D1, sum_D1D, add_D1D1D1, div_DDD") );	
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.888888888888889d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.9d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.8333333333333333d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.85d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8400000000000001d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8461538461538463d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.851851851851852d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8571428571428572d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.8888888888888888d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.9d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.85d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.84d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8518518518518519d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.8888888888888888d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.9d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8666666666666667d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.875d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8421052631578947d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.85d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8636363636363636d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8333333333333334d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.84d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8461538461538461d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8518518518518519d)); // histogram_measure_motyka_dMot2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8571428571428571d)); // histogram_measure_motyka_dMot2	
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_motyka_dMot2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.5d)); // histogram_measure_motyka_dMot2

				}
		});		
		entry("histogram_measure_neyman_chiSquared", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_neyman_chiSquared(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, square_D1D1, div_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 1.6000000000000003d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 2.5d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 3.5999999999999996d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 4.8999999999999995d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 6.399999999999999d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 3.1999999999999984d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 4.049999999999999d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 5.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 6.050000000000001d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 7.200000000000002d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 4.800000000000001d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 5.633333333333335d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 6.533333333333336d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 7.5000000000000036d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 8.533333333333339d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 6.400000000000004d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 7.225000000000004d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 8.100000000000005d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 9.025000000000007d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 10.000000000000009d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 16.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 25.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 36.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 49.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 64.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 32.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 40.5d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 50.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 60.5d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 72.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 48.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 56.333333333333336d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 65.33333333333333d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 75.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 85.33333333333333d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 64.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 72.25d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 81.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 90.25d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 100.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 160.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 250.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 360.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 490.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 640.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 320.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 405.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 500.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 605.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 720.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 480.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 563.3333333333334d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 653.3333333333334d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 750.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 853.3333333333334d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 640.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 722.5d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 810.0d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 902.5d)); // histogram_measure_neyman_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 1000.0d)); // histogram_measure_neyman_chiSquared
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_neyman_chiSquared

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_neyman_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_neyman_chiSquared
					
				}
		});	
		entry("histogram_measure_pearson_chiSquared", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_pearson_chiSquared(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, square_D1D1, div_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.10000000000000002d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.20000000000000004d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4000000000000001d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.32000000000000006d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.4166666666666667d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.5142857142857143d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.6124999999999999d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.711111111111111d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6399999999999998d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.7363636363636363d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333334d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.9307692307692309d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.0285714285714287d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.9600000000000001d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.0562500000000001d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.1529411764705886d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.2500000000000004d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.3473684210526322d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.2800000000000007d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.3761904761904769d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.4727272727272733d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.569565217391305d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.6666666666666676d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 3.2d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 4.166666666666667d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 5.142857142857143d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 6.125d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 7.111111111111111d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 6.4d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 7.363636363636363d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 8.333333333333334d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 9.307692307692308d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 10.285714285714286d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 9.6d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 10.5625d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 11.529411764705882d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 12.5d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 13.473684210526315d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 12.8d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 13.761904761904763d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 14.727272727272727d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 15.695652173913043d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 16.666666666666668d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 32.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 41.666666666666664d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 51.42857142857143d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 61.25d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 71.11111111111111d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 64.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 73.63636363636364d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 83.33333333333333d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 93.07692307692308d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 102.85714285714286d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 96.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 105.625d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 115.29411764705883d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 125.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 134.73684210526315d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 128.0d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 137.61904761904762d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 147.27272727272728d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 156.95652173913044d)); // histogram_measure_pearson_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 166.66666666666666d)); // histogram_measure_pearson_chiSquared
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_pearson_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_pearson_chiSquared
	
				}
		});	
		entry("histogram_measure_probabilistic_symmetric_chiSquared", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_probabilistic_symmetric_chiSquared(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("add_D1D1D1, sub_D1D1D1, square_D1D1, div_D1D1D1, sum_D1D,  mult_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.20000000000000004d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.4000000000000001d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.6000000000000001d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.8000000000000002d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.5333333333333334d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7142857142857143d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.9d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 1.0888888888888888d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 1.28d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 1.0666666666666662d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 1.2461538461538462d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.4285714285714286d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.6133333333333335d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.8000000000000005d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.6d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.778947368421053d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.9600000000000006d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 2.1428571428571437d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 2.3272727272727285d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 2.1333333333333346d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 2.312000000000001d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 2.4923076923076937d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 2.674074074074076d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 2.857142857142859d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 2.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 4.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 6.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 8.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 5.333333333333333d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 7.142857142857143d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 9.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 10.88888888888889d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 12.8d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 10.666666666666666d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 12.461538461538462d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 14.285714285714286d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 16.133333333333333d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 18.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 16.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 17.789473684210527d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 19.6d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 21.428571428571427d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 23.272727272727273d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 21.333333333333332d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 23.12d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 24.923076923076923d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 26.74074074074074d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 28.571428571428573d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 20.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 40.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 60.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 80.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 53.333333333333336d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 71.42857142857143d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 90.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 108.88888888888889d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 128.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 106.66666666666667d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 124.61538461538461d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 142.85714285714286d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 161.33333333333334d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 180.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 160.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 177.89473684210526d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 196.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 214.28571428571428d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 232.72727272727272d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 213.33333333333334d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 231.2d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 249.23076923076923d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 267.4074074074074d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 285.7142857142857d)); // histogram_measure_probabilistic_symmetric_chiSquared
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_probabilistic_symmetric_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_probabilistic_symmetric_chiSquared
				}
		});	
		entry("histogram_measure_ruzicka", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_ruzicka(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, sum_D1D, max_D1D1D1, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.16666666666666669d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.14285714285714288d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.12500000000000003d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.11111111111111113d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.20000000000000004d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.18181818181818185d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.16666666666666669d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.15384615384615385d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.14285714285714285d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.1875d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.1764705882352941d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.15789473684210523d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.19999999999999996d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.19047619047619044d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.18181818181818177d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.17391304347826084d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.16666666666666663d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.14285714285714285d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.125d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.1111111111111111d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.18181818181818182d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.15384615384615385d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.14285714285714285d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.1875d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.17647058823529413d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.15789473684210525d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.19047619047619047d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.18181818181818182d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.17391304347826086d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 0.0d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.14285714285714285d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.125d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.1111111111111111d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.18181818181818182d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.15384615384615385d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.14285714285714285d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.1875d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.17647058823529413d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.15789473684210525d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.2d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.19047619047619047d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.18181818181818182d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.17391304347826086d)); // histogram_measure_ruzicka
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.16666666666666666d)); // histogram_measure_ruzicka
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_ruzicka
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_ruzicka
				}
		});		
		entry("histogram_measure_soergel", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_soergel(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, sum_D1D, max_D1D1D1, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8571428571428572d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.875d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.888888888888889d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999999d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8461538461538461d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8571428571428572d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8125d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8235294117647058d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8421052631578948d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8095238095238096d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8260869565217392d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8571428571428571d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.875d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8888888888888888d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8461538461538461d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8571428571428571d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8125d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.8235294117647058d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8421052631578947d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.8095238095238095d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8260869565217391d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8571428571428571d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.875d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8888888888888888d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8461538461538461d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8571428571428571d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8125d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.8235294117647058d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8421052631578947d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.8095238095238095d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8181818181818182d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8260869565217391d)); // histogram_measure_soergel
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8333333333333334d)); // histogram_measure_soergel
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_soergel
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_soergel
				}
		});		
		entry("histogram_measure_sorensen", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_sorensen(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, sum_D1D, add_D1D1, div_DDD") );

					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.6666666666666667d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.75d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.7777777777777778d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6666666666666665d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6923076923076923d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.7333333333333334d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.7500000000000001d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.6842105263157895d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.7000000000000001d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.7272727272727273d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6666666666666667d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6800000000000002d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6923076923076924d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7037037037037038d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.7142857142857144d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.75d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.7777777777777778d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.6923076923076923d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.7333333333333333d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.75d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.6842105263157895d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.7d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.7272727272727273d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.68d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.6923076923076923d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.7037037037037037d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.75d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.7777777777777778d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.6923076923076923d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.7333333333333333d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.75d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.6842105263157895d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.7d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.7272727272727273d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.6666666666666666d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.68d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.6923076923076923d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.7037037037037037d)); // histogram_measure_sorensen
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.7142857142857143d)); // histogram_measure_sorensen
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_sorensen
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_sorensen
				}
		});		
		entry("histogram_measure_squared_chiSquared", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_squared_chiSquared(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("add_D1D1D1, sub_D1D1D1, square_D1D1, div_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.10000000000000002d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.20000000000000004d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.30000000000000004d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4000000000000001d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.2666666666666667d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.35714285714285715d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.45d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.5444444444444444d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.64d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.5333333333333331d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.6230769230769231d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.7142857142857143d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8066666666666668d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.9000000000000002d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8894736842105265d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.9800000000000003d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 1.0714285714285718d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 1.1636363636363642d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 1.0666666666666673d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 1.1560000000000006d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 1.2461538461538468d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 1.337037037037038d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 1.4285714285714295d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 3.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 2.6666666666666665d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 3.5714285714285716d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 4.5d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 5.444444444444445d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 6.4d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 5.333333333333333d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 6.230769230769231d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 7.142857142857143d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 8.066666666666666d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 9.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 8.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 8.894736842105264d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 9.8d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 10.714285714285714d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 11.636363636363637d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 10.666666666666666d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 11.56d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 12.461538461538462d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 13.37037037037037d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 14.285714285714286d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 26.666666666666668d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 35.714285714285715d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 45.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 54.44444444444444d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 64.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 53.333333333333336d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 62.30769230769231d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 71.42857142857143d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 80.66666666666667d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 90.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 80.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 88.94736842105263d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 98.0d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 107.14285714285714d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 116.36363636363636d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 106.66666666666667d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 115.6d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 124.61538461538461d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 133.7037037037037d)); // histogram_measure_squared_chiSquared
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 142.85714285714286d)); // histogram_measure_squared_chiSquared

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chiSquared
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_squared_chiSquared
				}
		});		
		entry("histogram_measure_squared_chord", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_squared_chord(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sqrt_D1D1, sub_D1D1D1, square_D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.1d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.19999999999999998d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.3000000000000001d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.4d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.1527864045000421d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.21010205144336438d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.2708497377870818d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.334314575050762d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.39999999999999986d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.30557280900008393d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.361916848035314d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.42020410288672877d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.48019609728144325d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.5416994755741639d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.45835921350012626d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.5143593539448981d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.5717143142914303d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.6303061543300934d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.6900331129458502d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.6111456180001684d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6669697220176641d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.7238336960706286d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7816673906749128d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.840408205773458d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 2.0000000000000004d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2.9999999999999996d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 4.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.5278640450004208d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.1010205144336433d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 2.708497377870819d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 3.3431457505076203d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 4.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 3.0557280900008417d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 3.6191684803531405d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 4.202041028867288d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 4.801960972814428d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 5.416994755741636d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 4.583592135001263d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 5.1435935394489825d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 5.717143142914301d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 6.30306154330093d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 6.900331129458503d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 6.111456180001683d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 6.669697220176639d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 7.238336960706283d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 7.816673906749119d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 8.404082057734573d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 10.000000000000002d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 20.000000000000004d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 30.0d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 40.00000000000001d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 15.278640450004207d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 21.010205144336435d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 27.084973778708182d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 33.431457505076196d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 39.99999999999999d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 30.55728090000841d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 36.19168480353141d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 42.02041028867288d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 48.01960972814429d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 54.16994755741638d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 45.83592135001261d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 51.435935394489825d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 57.17143142914301d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 63.030615433009324d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 69.00331129458499d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 61.11456180001683d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 66.69697220176637d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 72.3833696070628d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 78.1667390674912d)); // histogram_measure_squared_chord
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 84.04082057734574d)); // histogram_measure_squared_chord
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623155E308d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.7976931348623155E308d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.7976931348623155E308d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 4.9E-324d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.7976931348623155E308d)); // histogram_measure_squared_chord
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_squared_chord

				}
		});		
		entry("histogram_measure_squared_chord_Ssqc1", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_squared_chord_Ssqc1(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("H_D1D1D, sub_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.9d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.8d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.7d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.6d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8472135954999579d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.7898979485566356d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.7291502622129182d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.665685424949238d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.6000000000000001d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.694427190999916d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.638083151964686d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.5797958971132713d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.5198039027185568d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.45830052442583613d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.5416407864998738d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.48564064605510193d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.42828568570856973d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.3696938456699066d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.30996688705414976d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.3888543819998316d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.33303027798233586d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.27616630392937136d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.21833260932508725d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.15959179422654202d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, -1.0000000000000004d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, -1.9999999999999996d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, -3.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, -0.5278640450004208d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, -1.1010205144336433d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, -1.708497377870819d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, -2.3431457505076203d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, -3.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, -2.0557280900008417d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, -2.6191684803531405d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, -3.2020410288672876d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, -3.8019609728144284d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, -4.416994755741636d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, -3.583592135001263d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, -4.1435935394489825d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, -4.717143142914301d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, -5.30306154330093d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, -5.900331129458503d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, -5.111456180001683d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, -5.669697220176639d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, -6.238336960706283d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, -6.816673906749119d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, -7.404082057734573d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, -9.000000000000002d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, -19.000000000000004d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, -29.0d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, -39.00000000000001d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, -14.278640450004207d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, -20.010205144336435d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, -26.084973778708182d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, -32.431457505076196d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, -38.99999999999999d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, -29.55728090000841d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, -35.19168480353141d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, -41.02041028867288d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, -47.01960972814429d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, -53.16994755741638d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, -44.83592135001261d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, -50.435935394489825d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, -56.17143142914301d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, -62.030615433009324d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, -68.00331129458499d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, -60.11456180001683d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, -65.69697220176637d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, -71.3833696070628d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, -77.1667390674912d)); // histogram_measure_squared_chord_Ssqc1
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, -83.04082057734574d)); // histogram_measure_squared_chord_Ssqc1

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, -1.7976931348623155E308d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, -1.7976931348623155E308d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, -1.7976931348623155E308d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, -1.7976931348623155E308d)); // histogram_measure_squared_chord_Ssqc1
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_squared_chord_Ssqc1

					
				}
		});		
		entry("histogram_measure_squared_chord_Ssqc2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_squared_chord_Ssqc2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mkConstArray_DDD1, mult_D1D1D1, sqrt_D1D1, sub_D1D1D1, sum_D1D, mult_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, -1.5527864045000421d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, -1.5101020514433645d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, -1.470849737787082d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, -1.434314575050762d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, -1.4d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, -1.1055728090000843d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, -1.061916848035314d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, -1.0202041028867288d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, -0.980196097281443d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, -0.9416994755741637d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, -0.6583592135001259d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, -0.6143593539448979d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, -0.5717143142914296d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, -0.5303061543300929d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, -0.4900331129458497d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, -0.21114561800016785d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, -0.16696972201766358d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, -0.12383369607062789d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, -0.08166739067491169d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, -0.04040820577345716d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 2.4721359549995796d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 2.8989794855663558d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 3.2915026221291814d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 3.6568542494923806d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 4.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 6.944271909999159d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 7.3808315196468595d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 7.7979589711327115d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 8.198039027185569d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 8.583005244258363d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 11.416407864998739d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 11.856406460551018d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 12.2828568570857d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 12.696938456699069d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 13.0996688705415d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 15.888543819998318d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 16.33030277982336d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 16.76166303929372d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 17.183326093250876d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 17.595917942265423d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 42.721359549995796d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 46.98979485566356d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 50.91502622129181d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 54.568542494923804d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 58.0d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 87.44271909999159d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 91.8083151964686d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 95.97958971132712d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 99.9803902718557d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 103.83005244258362d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 132.16407864998737d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 136.5640646055102d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 140.828568570857d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 144.9693845669907d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 148.99668870541498d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 176.88543819998318d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 181.3030277982336d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 185.6166303929372d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 189.83326093250878d)); // histogram_measure_squared_chord_Ssqc2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 193.95917942265424d)); // histogram_measure_squared_chord_Ssqc2

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, -1.9999999403953552d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, -1.9999999403953552d)); // histogram_measure_squared_chord_Ssqc2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, -2.0d)); // histogram_measure_squared_chord_Ssqc2

					
				}
		});		
		entry("histogram_measure_squared_euclidean", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_squared_euclidean(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, square_D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.010000000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.04000000000000001d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.09000000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.16000000000000003d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.16000000000000003d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.25d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.36d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.48999999999999994d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.6399999999999999d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.6399999999999997d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8099999999999998d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 1.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 1.2100000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 1.4400000000000004d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 1.4400000000000004d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 1.6900000000000006d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 1.960000000000001d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 2.2500000000000013d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 2.560000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 2.560000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 2.890000000000002d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 3.2400000000000024d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 3.610000000000003d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 4.0000000000000036d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 4.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 9.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 16.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 16.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 25.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 36.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 49.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 64.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 64.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 81.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 100.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 121.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 144.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 144.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 169.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 196.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 225.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 256.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 256.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 289.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 324.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 361.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 100.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 900.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 1600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 2500.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 3600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 4900.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 6400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 6400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 8100.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 10000.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 12100.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 14400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 14400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 16900.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 19600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 22500.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 25600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 25600.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 28900.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 32400.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 36100.0d)); // histogram_measure_squared_euclidean
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 40000.0d)); // histogram_measure_squared_euclidean

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_squared_euclidean
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_squared_euclidean
					
				}
		});		
		entry("histogram_measure_taneja_difference", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_taneja_difference(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("mult_D1D1D1, sqrt_D1D1, mkConstArray_DDD1, add_D1D1D1, div_D1D1D1, ln_D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.08816799973531786d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.12490913185846915d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.1653357146368936d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.20896048167136022d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.25541281188299525d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.17633599947063572d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.21208261764458167d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.2498182637169383d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.2893910636486427d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.3306714292737871d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.26450399920595363d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.2999067284949223d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.3366722766318827d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.37472739557540774d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.4140066027692052d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.35267199894127127d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.3879003061082483d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.42416523528916367d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.46142378584181604d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.499636527433877d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8816799973531786d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.2490913185846921d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 1.6533571463689356d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 2.089604816713602d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 2.5541281188299534d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 1.7633599947063572d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 2.120826176445818d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 2.4981826371693843d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 2.8939106364864284d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 3.306714292737871d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 2.6450399920595355d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 2.9990672849492226d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 3.3667227663188264d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 3.747273955754075d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 4.1400660276920505d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 3.5267199894127144d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 3.8790030610824844d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 4.241652352891636d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 4.61423785841816d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 4.9963652743387685d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 8.816799973531786d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 12.490913185846916d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 16.53357146368936d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 20.896048167136023d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 25.541281188299536d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 17.633599947063573d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 21.208261764458168d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 24.98182637169383d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 28.939106364864283d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 33.06714292737872d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 26.45039992059536d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 29.99067284949221d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 33.667227663188285d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 37.47273955754075d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 41.40066027692051d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 35.267199894127145d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 38.79003061082484d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 42.416523528916336d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 46.14237858418159d)); // histogram_measure_taneja_difference
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 49.96365274338766d)); // histogram_measure_taneja_difference
										
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, null)); // histogram_measure_taneja_difference

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 0.0d)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_taneja_difference
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_taneja_difference
					
				}
		});			
		entry("histogram_measure_tanimoto", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_tanimoto(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("max_D1D1D1, sum_D1D, min_D1D1D1, sub_D1D1D1, div_DDD") );

					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8571428571428572d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.875d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.888888888888889d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999999d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8461538461538461d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8571428571428572d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8125d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8235294117647058d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8421052631578948d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8095238095238096d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8260869565217392d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.875d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8888888888888888d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8461538461538461d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8125d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.8235294117647058d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8421052631578947d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.8095238095238095d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8260869565217391d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.875d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8888888888888888d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8461538461538461d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8125d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.8235294117647058d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8421052631578947d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.8095238095238095d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8260869565217391d)); // histogram_measure_tanimoto
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_tanimoto
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_tanimoto
					
				}
		});		
		entry("histogram_measure_tanimoto2", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_tanimoto2(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, sum_D1D, add_DDD, sub_DDD, mult_DDD, add_DDD, div_DDD") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.7999999999999999d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8333333333333333d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.857142857142857d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.875d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8888888888888887d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999999d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8181818181818181d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333333d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8461538461538461d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8571428571428572d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8125d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8235294117647058d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8421052631578948d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.7999999999999999d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8095238095238095d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8181818181818181d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8260869565217391d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.875d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8888888888888888d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8461538461538461d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8125d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.8235294117647058d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8421052631578947d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.8095238095238095d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8260869565217391d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.875d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8888888888888888d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8461538461538461d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8571428571428571d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8125d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.8235294117647058d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8421052631578947d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.8095238095238095d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8181818181818182d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8260869565217391d)); // histogram_measure_tanimoto2
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8333333333333334d)); // histogram_measure_tanimoto2
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_tanimoto2
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_tanimoto2
				}
		});	
		entry("histogram_measure_topsoe", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_topsoe(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("add_D1D1D1, mkConstArray_DDD1, mult_D1D1D1, div_D1D1D1, ln_D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 0.06931471805599453d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 0.13862943611198905d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 0.20794415416798362d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 0.2772588722239781d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.1455515830161844d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.19812160359007547d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.25310161544280674d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.3098835762452221d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.3680642071684971d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.2911031660323686d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.3429714062181277d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.39624320718015094d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.4507090699985897d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.5062032308856137d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.4366547490485532d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.4882712248317421d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.540876185507909d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.5943648107702266d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.6486481468602547d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.5822063320647377d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.6336932528965062d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.6859428124362562d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.7388922903851649d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.7924864143603021d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 0.6931471805599453d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.3862943611198906d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 2.0794415416798357d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 2.772588722239781d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 1.4555158301618436d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 1.9812160359007533d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 2.531016154428068d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 3.0988357624522203d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 3.6806420716849706d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 2.911031660323687d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 3.429714062181278d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 3.9624320718015067d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 4.507090699985897d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 5.062032308856136d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 4.366547490485532d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 4.882712248317421d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 5.408761855079088d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 5.943648107702259d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 6.4864814686025465d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 5.822063320647374d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 6.336932528965059d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 6.859428124362556d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 7.388922903851644d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 7.924864143603013d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 6.931471805599453d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 13.862943611198906d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 20.79441541679836d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 27.725887222397812d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 14.555158301618437d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 19.812160359007535d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 25.31016154428068d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 30.988357624522198d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 36.806420716849715d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 29.110316603236875d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 34.29714062181278d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 39.62432071801507d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 45.07090699985896d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 50.62032308856136d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 43.665474904855316d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 48.82712248317419d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 54.087618550790886d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 59.436481077022606d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 64.86481468602545d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 58.22063320647375d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 63.36932528965059d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 68.59428124362556d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 73.88922903851645d)); // histogram_measure_topsoe
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 79.24864143603014d)); // histogram_measure_topsoe

					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 4.9E-324d)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 4.9E-324d)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_topsoe
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_topsoe
				}
		});			
		entry("histogram_measure_wave_hedges", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_wave_hedges(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("sub_D1D1D1, abs_D1D1, max_D1D1, div_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8571428571428572d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.875d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.888888888888889d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999999d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8461538461538461d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8571428571428572d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8125d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8235294117647058d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8421052631578948d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8095238095238096d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8260869565217392d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8571428571428571d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.875d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8888888888888888d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8461538461538461d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8571428571428571d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8125d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.8235294117647058d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8421052631578947d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.8095238095238095d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8260869565217391d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8571428571428571d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.875d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8888888888888888d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8461538461538461d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8571428571428571d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8125d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.8235294117647058d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8421052631578947d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.8095238095238095d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8181818181818182d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8260869565217391d)); // histogram_measure_wave_hedges
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_wave_hedges
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_wave_hedges
				}
		});	
		entry("histogram_measure_wave_hedges_dWH", new Arity2Function<Double[],Double[],Double>("Arity2Function<Double[],Double[],Double>") {			
			public Double evalAt( Double[] P, Double[] Q ) {
				try {
					return m().histogram_measure_wave_hedges_dWH(P, Q);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("min_D1D1D1, max_D1D1D1, div_D1D1D1, mkConstArray_DDD1, sub_D1D1D1, sum_D1D") );
					
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.1d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.2d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.30000000000000004d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.4d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.5d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.6d}, 0.8333333333333333d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7d}, 0.8571428571428571d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.7999999999999999d}, 0.875d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.1d}, new Double[]{0.8999999999999999d}, 0.8888888888888888d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{0.9999999999999999d}, 0.7999999999999999d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.0999999999999999d}, 0.8181818181818181d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.2d}, 0.8333333333333333d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.3d}, 0.8461538461538461d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.2d}, new Double[]{1.4000000000000001d}, 0.8571428571428572d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.5000000000000002d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.6000000000000003d}, 0.8125d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.7000000000000004d}, 0.8235294117647058d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.8000000000000005d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.30000000000000004d}, new Double[]{1.9000000000000006d}, 0.8421052631578948d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.0000000000000004d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.1000000000000005d}, 0.8095238095238095d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.2000000000000006d}, 0.8181818181818182d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.3000000000000007d}, 0.8260869565217391d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.4d}, new Double[]{2.400000000000001d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{2.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{3.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{5.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{6.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{7.0d}, 0.8571428571428572d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{8.0d}, 0.875d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.0d}, new Double[]{9.0d}, 0.8888888888888888d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{10.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{11.0d}, 0.8181818181818181d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{12.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{13.0d}, 0.8461538461538461d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{2.0d}, new Double[]{14.0d}, 0.8571428571428572d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{15.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{16.0d}, 0.8125d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{17.0d}, 0.8235294117647058d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{18.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{3.0d}, new Double[]{19.0d}, 0.8421052631578947d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{20.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{21.0d}, 0.8095238095238095d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{22.0d}, 0.8181818181818181d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{23.0d}, 0.8260869565217391d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.0d}, new Double[]{24.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{10.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{20.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{30.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{40.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{50.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{60.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{70.0d}, 0.8571428571428572d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{80.0d}, 0.875d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{10.0d}, new Double[]{90.0d}, 0.8888888888888888d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{100.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{110.0d}, 0.8181818181818181d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{120.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{130.0d}, 0.8461538461538461d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{20.0d}, new Double[]{140.0d}, 0.8571428571428572d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{150.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{160.0d}, 0.8125d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{170.0d}, 0.8235294117647058d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{180.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{30.0d}, new Double[]{190.0d}, 0.8421052631578947d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{200.0d}, 0.8d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{210.0d}, 0.8095238095238095d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{220.0d}, 0.8181818181818181d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{230.0d}, 0.8260869565217391d)); // histogram_measure_wave_hedges_dWH
					addUnitTest(new Arity3Input<Double[],Double[],Double>(new Double[]{40.0d}, new Double[]{240.0d}, 0.8333333333333334d)); // histogram_measure_wave_hedges_dWH
					
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{0.0d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NaN}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.NEGATIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{0.0d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{1.7976931348623157E308d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{Double.POSITIVE_INFINITY}, new Double[]{4.9E-324d}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{1.7976931348623157E308d}, 0.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{1.7976931348623157E308d}, new Double[]{4.9E-324d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{0.0d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NaN}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.NEGATIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{Double.POSITIVE_INFINITY}, null)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{1.7976931348623157E308d}, 1.0d)); // histogram_measure_wave_hedges_dWH
					addFailureModeTest(new Arity3Input<Double[],Double[],Double>(new Double[]{4.9E-324d}, new Double[]{4.9E-324d}, 0.0d)); // histogram_measure_wave_hedges_dWH
				}
		});		
		
	 // pixel measure ops
		entry("pixel_measure_ari", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_ari(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2ArrayColumnMajor_MD1, uniqueValues_MD1, getRowCounts_D2D1, vectorize_D2D1, sum_D1D, gaussSum_D1D") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d}},{{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d}},{{0.0d},{1.0d}}}),0.0d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d}}}),0.55d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d}}}),-0.06934001670843773d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),0.24080980287693127d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),-0.026141417808840973d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),0.07450871467259225d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),-0.011904761904761904d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),0.022140249525566084d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),-0.008526996496047854d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.002821457044151655d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),-0.003879587112648396d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),-0.00422654268808115d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.0d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),-0.003968253968253968d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.0021950929400188805d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.008075549729796455d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),-0.0017286629778051205d)); // pixel_measure_ari
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),-0.0025850689758130756d)); // pixel_measure_ari

					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ari
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{1.0d},{1.0d}}}),null)); // pixel_measure_ari
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_ari
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ari
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d}},{{0.0d},{1.0d}}}),null)); // pixel_measure_ari
					
				}
		});		
		
		entry("pixel_measure_dice", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_dice(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2ArrayColumnMajor_MD1, pvrel_greaterThan_D1DD1,  pvrel_equalTo_D1DD1, sum_D1D, mult_DDD, add_DDD, div_DDD") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d}},{{0.0d},{0.0d}}}),0.8d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d}}}),0.2857142857142857d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d}}}),0.25d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}}}),0.7407407407407407d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.3333333333333333d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.48148148148148145d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),0.38596491228070173d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.3855421686746988d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.5714285714285714d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.5151515151515151d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),0.463768115942029d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.5172413793103449d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),0.5922330097087378d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),0.5299145299145299d)); // pixel_measure_dice
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.4901185770750988d)); // pixel_measure_dice

					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_dice
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_dice
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_dice
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_dice
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_dice

				}
		});	
		entry("pixel_measure_jaccard", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_jaccard(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2ArrayColumnMajor_MD1, pvrel_greaterThan_D1DD1,  pvrel_equalTo_D1DD1, sum_D1D, div_DDD") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{0.0d}}}),0.25d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d}}}),0.2857142857142857d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d}}}),0.7142857142857143d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.3125d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.41379310344827586d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),0.3902439024390244d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.36363636363636365d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.34328358208955223d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),0.35135135135135137d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.3368421052631579d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.375d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.40458015267175573d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),0.29411764705882354d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),0.366120218579235d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),0.35135135135135137d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.386046511627907d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.3093220338983051d)); // pixel_measure_jaccard
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),0.3215686274509804d)); // pixel_measure_jaccard

					
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_jaccard
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_jaccard
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_jaccard
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_jaccard
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_jaccard

				}
		});		
		entry("pixel_measure_ri", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_ri(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2ArrayColumnMajor_MD1, uniqueValues_MD1, getRowCounts_D2D1, vectorize_D2D1, sum_D1D, gaussSum_D1D") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{0.0d}}}),0.5d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d}}}),0.5d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d}}}),0.4666666666666667d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.48d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),0.5253968253968254d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.5153061224489797d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),0.49255952380952384d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),0.49444444444444446d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.49818181818181817d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.49752066115702476d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.4980574980574981d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.49718230487461257d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.49874411302982735d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),0.5099206349206349d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.49831495098039214d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.4982698961937716d)); // pixel_measure_ri
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.4984711233421244d)); // pixel_measure_ri

					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_ri
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d}},{{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ri
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ri
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ri
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_ri

					
				}
		});		
		entry("pixel_measure_tee", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_tee(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2Array_MD1, logical_D1D1, not_D1D1, and_D1D1, or_D1D1, sum_D1D, div_DDD") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{1.0d}}}),0.0d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d}}}),0.42857142857142855d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d}}}),0.5d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.42857142857142855d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),0.15789473684210525d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.5714285714285714d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.3939393939393939d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.6111111111111112d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),0.45454545454545453d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.47761194029850745d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.44155844155844154d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),0.38235294117647056d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}}}),0.5747126436781609d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.5169491525423728d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),0.48031496062992124d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),0.4675324675324675d)); // pixel_measure_tee
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.5688622754491018d)); // pixel_measure_tee

					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_tee
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{1.0d},{1.0d}}}),null)); // pixel_measure_tee
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_tee
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_tee
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_tee

				}
		});		
		entry("pixel_measure_tet", new Arity2Function<ImageData,ImageData,Double>("Arity2Function<ImageData,ImageData,Double>") {			
			public Double evalAt( ImageData img1, ImageData img2 ) {
				try {
					return m().pixel_measure_tet(img1, img2);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
					addMeasureOpEquivalents( Array.array("XX"));
					addDependentOps( Array.array("img2Array_MD1, logical_D1D1, not_D1D1, and_D1D1, or_D1D1, sum_D1D, div_DDD") );
					
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d}},{{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{1.0d},{0.0d}}}),0.3333333333333333d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d}}}),0.4d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d}}}),0.42857142857142855d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.5454545454545454d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.1875d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),0.5555555555555556d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.4d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.6111111111111112d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}}}),0.36538461538461536d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),0.5538461538461539d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),0.5529411764705883d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),0.5697674418604651d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),0.5360824742268041d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),0.45045045045045046d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}}}),0.5648854961832062d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}}}),0.5036496350364964d)); // pixel_measure_tet
					addUnitTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d}}}),new ImageData( new double[][][]{{{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d}},{{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d}},{{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d}},{{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d}},{{0.0d},{0.0d},{0.0d},{0.0d},{1.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d}},{{0.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d}},{{1.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{0.0d},{1.0d},{0.0d},{1.0d},{1.0d},{0.0d},{1.0d},{0.0d},{1.0d}}}),0.4785276073619632d)); // pixel_measure_tet

					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{1.0d},{1.0d}}}),null)); // pixel_measure_tet
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{1.0d}}}),null)); // pixel_measure_tet
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{1.0d}},{{1.0d},{1.0d}}}),null)); // pixel_measure_tet
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{0.0d},{0.0d}},{{1.0d},{0.0d}}}),null)); // pixel_measure_tet
					addFailureModeTest(new Arity3Input<ImageData,ImageData,Double>(new ImageData( new double[][][]{{{0.0d},{0.0d}},{{0.0d},{0.0d}}}),new ImageData( new double[][][]{{{1.0d},{0.0d}},{{0.0d},{0.0d}}}),null)); // pixel_measure_tet

				}
		});	

		
	// general measure fx scenarios
		
		entry("HistogramMeasureRGB", new Arity3Function<Measure,String,String,Double>("HistogramMeasureRGB") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					ImageObjectAdapter,ImageObjectAdapter,
					RGBHistogramExtractor,RGBHistogramExtractor,
					RGBHistogramDescriptor,RGBHistogramDescriptor,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new ImageObjectAdapter(),
							new ImageObjectAdapter(),
							new RGBHistogramExtractor(),
							new RGBHistogramExtractor(),
							new RGBHistogramDescriptor(),
							new RGBHistogramDescriptor()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});		
		
		entry("HistogramMeasureGS", new Arity3Function<Measure,String,String,Double>("HistogramMeasureGS") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					ImageObjectAdapter,ImageObjectAdapter,
					GrayscaleHistogramExtractor,GrayscaleHistogramExtractor,
					GrayscaleHistogramDescriptor,GrayscaleHistogramDescriptor,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new ImageObjectAdapter(),
							new ImageObjectAdapter(),
							new GrayscaleHistogramExtractor(),
							new GrayscaleHistogramExtractor(),
							new GrayscaleHistogramDescriptor(),
							new GrayscaleHistogramDescriptor()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});			
		
		entry("PixelMeasureUnLabeled", new Arity3Function<Measure,String,String,Double>("PixelMeasureUnLabeled") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					ImageObjectAdapter,ImageObjectAdapter,
					ArrayFeatureExtractor,ArrayFeatureExtractor,
					ThreeDimensionalDoubleArrayFeature,ThreeDimensionalDoubleArrayFeature,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new ImageObjectAdapter(),
							new ImageObjectAdapter(),
							new ArrayFeatureExtractor(),
							new ArrayFeatureExtractor(),
							new ThreeDimensionalDoubleArrayFeature(),
							new ThreeDimensionalDoubleArrayFeature()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});	
		
		entry("PixelMeasureLabeled", new Arity3Function<Measure,String,String,Double>("PixelMeasureLabeled") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					LabeledImageObjectAdapter,LabeledImageObjectAdapter,
					LabeledArrayFeatureExtractor,LabeledArrayFeatureExtractor,
					LabeledThreeDimensionalDoubleArrayFeature,LabeledThreeDimensionalDoubleArrayFeature,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new LabeledImageObjectAdapter(),
							new LabeledImageObjectAdapter(),
							new LabeledArrayFeatureExtractor(),
							new LabeledArrayFeatureExtractor(),
							new LabeledThreeDimensionalDoubleArrayFeature(),
							new LabeledThreeDimensionalDoubleArrayFeature()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});			
		
		entry("GeneralMeasureSymmetric", new Arity3Function<Measure,String,String,Double>("GeneralMeasureSymmetric") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					LabeledImageObjectAdapter,LabeledImageObjectAdapter,
					LabeledArrayFeatureExtractor,LabeledArrayFeatureExtractor,
					LabeledThreeDimensionalDoubleArrayFeature,LabeledThreeDimensionalDoubleArrayFeature,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new LabeledImageObjectAdapter(),
							new LabeledImageObjectAdapter(),
							new LabeledArrayFeatureExtractor(),
							new LabeledArrayFeatureExtractor(),
							new LabeledThreeDimensionalDoubleArrayFeature(),
							new LabeledThreeDimensionalDoubleArrayFeature()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});
		
		entry("GeneralMeasureFree", new Arity3Function<Measure,String,String,Double>("GeneralMeasureFree") {			
			public Double evalAt( Measure measure, String fileName1, String fileName2 ) {
				try {
					VersusMeasureFx<
					LabeledImageObjectAdapter,LabeledImageObjectAdapter,
					LabeledArrayFeatureExtractor,LabeledArrayFeatureExtractor,
					LabeledThreeDimensionalDoubleArrayFeature,LabeledThreeDimensionalDoubleArrayFeature,
					Measure,
					Similarity,
					Double> f = new VersusMeasureFx();
					
					return f.op( 
							measure, 
							fileName1, 
							fileName2,
							new LabeledImageObjectAdapter(),
							new LabeledImageObjectAdapter(),
							new LabeledArrayFeatureExtractor(),
							new LabeledArrayFeatureExtractor(),
							new LabeledThreeDimensionalDoubleArrayFeature(),
							new LabeledThreeDimensionalDoubleArrayFeature()
						);
				}
				catch( Exception e ) { handleException(e); }
				return null;
			}		
				public void initFunction()
				{
				}
		});	

		
	}
	
	public void entry(String name, Function function ) 
	{
		function.name(name);
		FUNCTIONS.add(function);
	}
	
	public Function getByName( String name ) 
	{
		int len = FUNCTIONS.length();
		Function curFx = null;
		for (int i=0; i < len; i++)
		{
		    if ( FUNCTIONS.get(i) == null ) continue;		  
			curFx = (Function)FUNCTIONS.get(i);
			if ( curFx.name() == null ) continue;
			if ( Utils._cmp(curFx.name(), name) ) return curFx;
		}		
		return new Function("EMPTY_FX");		
	}
	
	public Function[] getByType( String type ) 
	{		
		int len = FUNCTIONS.length();
		Function curFx = null;
		TA _list = new TA();
		int ctr = 0;		
		for (int i=0; i < len; i++){		
			if ( FUNCTIONS.get(i) == null ) continue;			
			curFx = (Function)FUNCTIONS.get(i);
			if ( curFx.type() != null ) {
				if ( Utils._cmp(curFx.type(), type) ) {					
					_list.add( curFx );
					ctr++;
				}
			}			
		}
		Function[] list = new Function[ctr];
		for (int i=0; i < ctr; i++) {
			list[i] = (Function)_list.get(i);
		}
		return list;
	}	
}
